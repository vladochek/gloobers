<?php

/**
 * @file
 * Handles the form elements of the customer survey form
 * All hooks are in the .module file.
 */

/**
 * Master form which calls an individual form for each step.
 * 
 * @see customer_survey_form_validate().
 * @see customer_survey_form_submit().
 * 
 * @param type $form
 * @param string $form_state
 * @return type 
 */
function product_add_form($form, &$form_state) {

menu_rebuild();
	if ((check_plain(menu_get_active_title()) == "Add Product") && arg(2) != "page")
		$page = 'pd';
	else if ((check_plain(menu_get_active_title()) == "Add Product") && arg(2) == "page"){
		$page = arg(3);
	}
 
/*   $form = array();
  $form = products_get_header($form, $form_state); */

  switch ($page) {
  
    case 'pst':
      return product_service_type_form($form, $form_state);
     break;
    
    case 'ps':
      return product_service_form($form, $form_state);
     break;  
 
    case 'pd': 
      return product_details_form($form, $form_state);  
     break;
 
    case 'pa': 
      return product_amenities_form($form, $form_state);  
     break;

    case 'pl': 
      return product_location_form($form, $form_state);  
     break;
	 
    case 'psh':
      return product_scheduling_form($form, $form_state);
     break;  
 
    case 'pr': 
      return product_rules_form($form, $form_state);  
     break;

    case 'pp': 
      return product_pricing_form($form, $form_state);  
     break;
	 
    case 'psu': 
      return product_subscription_form($form, $form_state);  
     break;
 
    case 'pex': 
      return product_extra_form($form, $form_state);  
     break;
 
    case 'pms': 
      return product_messages_form($form, $form_state);  
     break;
 
    default:
      return product_choose_service_form($form, $form_state);
     break; 
  }
  
  return $form;
    
}

function product_add_form_1(){
menu_rebuild();
	$photos = array();
	$page = arg(2);
	$extrasListing = $addressListing = $photosListing = $subscriptionListing = 0;
	switch($page){
		case "overview":
			$productForm = drupal_get_form('product_details_form');
		break;
		case "photos":
			$photosListing = 1;
			$_SESSION['product_id'] = arg(3);
			drupal_add_js(drupal_get_path('theme', 'gloobers2') .'/js/jquery.alerts.js', 'file');
			drupal_add_css(drupal_get_path('theme', 'gloobers2') .'/css/jquery.alerts.css', 'file');
			$photos = getPhotosData(arg(3));
			$productForm = drupal_get_form('product_photos_form');
		break;
		case "amenities":
			$productForm = drupal_get_form('product_amenities_form');
		break;
		case "location":
			$addressListing = 1;
			$addressform=drupal_get_form('product_location_info_form');	
			$productId=(Integer)arg(3);			
			if (is_int ($productId) )
			{
				$productDetail=getListingData($productId);	
			}
		break;
		case "extra":
			$extrasListing = 1;
			$extras = getProductExtraData(arg(3));
			$productForm = drupal_get_form('product_extra_form');
		break;
		case "pricing":
			drupal_add_js(drupal_get_path('theme', 'gloobers2') .'/js/vendor/plugins/datepicker/bootstrap-datepicker.js', 'file');
			$productForm = drupal_get_form('product_pricing_form');
		break;
		case "subscription":
			$subscriptionListing = 1;
			$productForm = drupal_get_form('product_subscription_form');
		break;
		case "rules":
			$productForm = drupal_get_form('product_rules_form');
		break;
		case "scheduling":
			$productForm = drupal_get_form('product_scheduling_form');
		break;
		
		default:
			$productForm = drupal_get_form('product_details_form');
		break; 
	}
	$_SESSION['product_id'] = arg(3);
/* 	drupal_add_js(drupal_get_path('theme', 'gloobers2') .'/js/custom.js', 'file'); */
	return theme( 'add_product', array( 'productForm' => $productForm,'photos'=>$photos,'extras'=>$extras,'extrasListing'=>$extrasListing,'productDetail'=>$productDetail,'addressform'=>$addressform,'addressListing'=>$addressListing,'photosListing'=>$photosListing,'subscriptionListing'=>$subscriptionListing));
}

/**
 * Form for the rate_the_room step.
 * 
 * @see customer_survey_form().
 *  
 * @param type $form
 * @param type $form_state
 * @return type 
 */
 
 
function product_service_type_form($form, &$form_state) {

    
  $values = isset($form_state['multistep_values']['product_service_type']) ? $form_state['multistep_values']['product_service_type'] : array();

  $form['product_service_type'] = array(
    '#prefix' => '<div><h2>Select your Listing type </h2>',
    '#suffix' => '</div>',
  );
  
  $form['product_service_type']['service_type'] = array(
    '#type' => 'radios',
    '#options' => array('HOTEL' => 'Hotels', 'VACATION-RENTALS' => 'Vacation Rentals', 'RESTAURANTS' => 'Restaurants', 'EXPERIENCE' => 'Experience'),
    '#default_value' => isset($values['service_type']) ? $values['service_type'] : NULL,
	'#required' => TRUE
  );
 
  $form['page'] = array(
    '#type' => 'hidden',
    '#default_value' => 'product_service_type'
  );
  
  $form['next'] = array(
    '#type' => 'submit',
    '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  );
    
  return $form;
}


function product_service_form($form, &$form_state) {

    
  $values = isset($form_state['multistep_values']['product_service']) ? $form_state['multistep_values']['product_service'] : array();

  $form['product_service'] = array(
    '#prefix' => '<div><h2>Select your Listing category </h2>',
    '#suffix' => '</div>',
  );
  
  $form['product_service']['service_id'] = array(
    '#type' => 'radios',
    '#options' => array(1 => 'Activity', 2 => 'Day Tour', 3 => 'Multi Day Tour', 4 => 'Private Tour',5 => 'Rental', 6 => 'Ticket', 7 => 'Lesson', 8 => 'Charter', 9 => 'Event'),
    '#default_value' => isset($values['service_id']) ? $values['service_id'] : NULL,
	'#required' => TRUE
  );
  
  $form['page'] = array(
    '#type' => 'hidden',
    '#default_value' => 'product_service'
  );
  
  $form['next'] = array(
    '#type' => 'submit',
    '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  );

  
  return $form;
}


/**
 * Form for the rate_the_service step.
 * 
 * @see customer_survey_form().
 *  
 * @param type $form
 * @param type $form_state
 * @return type 
 */
 /*
function product_details_form($form, &$form_state) {
    
  $values = isset($form_state['multistep_values']['product_details']) ? $form_state['multistep_values']['product_details'] : array();

  $form['product_details'] = array(
    '#prefix' => '<div><h2>Overview</h2>',
    '#suffix' => '</div>',
  );

  $form['product_details']['product_type'] = array(
    '#type' => 'select',
    '#title' => t('Type'),
    '#default_value' => isset($values['product_type']) ? $values['product_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array(1 => 'Activity', 2 => 'Day Tour', 3 => 'Multi Day Tour', 4 => 'Private Tour',5 => 'Rental', 6 => 'Ticket', 7 => 'Lesson', 8 => 'Charter', 9 => 'Event'),
	'#required' => TRUE
  );
  
  $form['product_details']['product_category'] = array(
    '#type' => 'select',
    '#title' => t('Category'),
    '#default_value' => isset($values['product_category']) ? $values['product_category'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array(1 => 'Culture', 2 => 'History', 3 => 'Ethnic & Communities', 4 => 'Photography',5 => 'Archeology', 6 => 'Safari & Animal Watching', 7 => 'Nature', 8 => 'Hiking', 9 => 'Sports'),
	'#required' => TRUE
  );
  
  
  $form['product_details']['product_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => t('Max 35 characters'),
    '#default_value' => isset($values['product_name']) ? $values['product_name'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#required' => TRUE
  );
  $form['#attributes'] = array('enctype' => 'multipart/form-data');
/*   $form['product_details']['unique_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Unique code'),
    '#default_value' => isset($values['unique_code']) ? $values['unique_code'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#description' => t('optional')
  );
  
  $form['product_details']['product_pricing_type'] = array(
    '#type' => 'select',
    '#prefix' => '<div class="product_pricing">',
    '#title' => t('Product pricing'),
    '#default_value' => isset($values['product_pricing_type']) ? $values['product_pricing_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('PER_PERSON'=>'By Person','PER_ITEM'=>'By Item','FIXED'=>'Fixed','PER_DAY' => 'By Day','PER_HOUR'=>'By Hour','PER_MINUTE'=>'By Minute')
  );
  
  $form['product_details']['product_pricing_key'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_key']) ? $values['product_pricing_key'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('everyone'=>'Everyone','adult'=>'Adult','child'=>'Child')
  );
  
  $form['product_details']['product_item_label'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_item_label']) ? $values['product_item_label'] : NULL,
	'#attributes' => array('placeholder'=>'Label','class' => array('form-control')),
  );
 
  $form['product_details']['product_pricing_min'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_pricing_min']) ? $values['product_pricing_min'] : NULL,
	'#attributes' => array('placeholder'=>'min','class' => array('form-control')),
  );
  
  $form['product_details']['product_pricing_max'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_pricing_max']) ? $values['product_pricing_max'] : NULL,
	'#attributes' => array('placeholder'=>'max','class' => array('form-control')),
  );
  
  $form['product_details']['product_pricing_value'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_pricing_value']) ? $values['product_pricing_value'] : NULL,
	'#attributes' => array('placeholder'=>'Price','class' => array('form-control')),
	'#suffix' => '</div>'
  );

  $form['product_details']['product_pricing_day_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_day_type']) ? $values['product_pricing_day_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('EACH'=>'Per day','TOTAL'=>'Total')
  );
  
  $form['product_details']['product_pricing_hour_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_hour_type']) ? $values['product_pricing_hour_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('EACH'=>'Per hour','TOTAL'=>'Total')
  );
  
  $form['product_details']['product_pricing_minute_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_minute_type']) ? $values['product_pricing_minute_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('EACH'=>'Per minute','TOTAL'=>'Total')
  );
  
  
  $form['product_details']['advertised_price'] = array(
    '#type' => 'textfield',
    '#title' => t('Advertised price'),
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
    '#default_value' => isset($values['advertised_price']) ? $values['advertised_price'] : NULL,
  );
  
  $form['product_details']['quantity_min'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="quantity">',
    '#title' => t('Quantity'),
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
    '#default_value' => isset($values['quantity_min']) ? $values['quantity_min'] : NULL,
  );
  
  $form['product_details']['quantity_max'] = array(
    '#type' => 'textfield',
	'#suffix' => '</div>',
    '#default_value' => isset($values['quantity_max']) ? $values['quantity_max'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );
  
  $form['product_details']['quantity_label_singular'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="quantity-label">',
    '#title' => t('Quantity label'),
	'#attributes' => array('placeholder'=>'Participant'),
    '#default_value' => isset($values['quantity_label_singular']) ? $values['quantity_label_singular'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );
  
  $form['product_details']['quantity_label_plural'] = array(
    '#type' => 'textfield',
	'#suffix' => '</div>',
	'#attributes' => array('placeholder'=>'Participants'),
    '#default_value' => isset($values['quantity_label_plural']) ? $values['quantity_label_plural'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );
 */  
  /*$form['product_details']['brief_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Brief description'),
    '#default_value' => isset($values['brief_description']) ? $values['brief_description'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#required' => TRUE
  );
 
  $form['product_details']['long_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Long description'),
    '#default_value' => isset($values['long_description']) ? $values['long_description'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#required' => TRUE
  );
  
/*   $form['product_details']['purchased_as_gift'] = array(
    '#type' => 'checkbox',
	'#prefix' => '<div class="gift-card">',
    '#title' => t('Can be purchased as a gift'),

    '#default_value' => isset($values['purchased_as_gift']) ? $values['purchased_as_gift'] : NULL,
	
  );
  
  $form['product_details']['gift_card_expires'] = array(
    '#type' => 'textfield',
    '#title' => t('expires'),
	'#suffix' => '</div>',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
    '#description' => t('days after purchase '),
    '#default_value' => isset($values['gift_card_expires']) ? $values['gift_card_expires'] : NULL,
  );
  
  $form['product_details']['private_tour_chapter'] = array(
    '#type' => 'checkbox',
    '#title' => t('Private tour / Charter'),

    '#default_value' => isset($values['private_tour_chapter']) ? $values['private_tour_chapter'] : NULL,
  );
  
  $form['product_details']['special_deposit_rules'] = array(
    '#type' => 'checkbox',
    '#title' => t('Requires special deposit rules'),
	'#prefix' => '<div class="special-deposit-rules">',

    '#default_value' => isset($values['special_deposit_rules']) ? $values['special_deposit_rules'] : NULL,
  );

  $form['product_details']['special_deposit_rules_type'] = array(
    '#type' => 'select',
    '#options' => array('FULL' => "Full amount", 'DEPOSIT_PERCENT' => 'Deposit (% of order total amount)','DEPOSIT_FIXED' => "Deposit (Fixed amount per person/quantity)", 'DEPOSIT_FIXED_PER_ORDER' => 'Deposit (Fixed amount per order)', 'NONE' => 'No charge'),
    '#default_value' => isset($values['special_deposit_rules_type']) ? $values['special_deposit_rules_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );

  $form['product_details']['special_deposit_rules_value_perc'] = array(
    '#type' => 'textfield',
    '#title' => t('Deposit'),
	'#suffix' => '</div>',
    '#description' => t('%'),
    '#default_value' => isset($values['special_deposit_rules_value_perc']) ? $values['special_deposit_rules_value_perc'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );
  
  $form['product_details']['special_deposit_rules_value_dollor'] = array(
    '#type' => 'textfield',
    '#title' => t('Deposit amount'),
	'#suffix' => '</div>',
    '#description' => t('$'),
    '#default_value' => isset($values['special_deposit_rules_value_dollor']) ? $values['special_deposit_rules_value_dollor'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  ); */
 
 /* $form['page'] = array(
    '#type' => 'hidden',
    '#default_value' => 'product_amenities'
  );
  
  $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  );
  
  $form['next'] = array(
    '#type' => 'submit',
    '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  );
    
  return $form;
}*/
/**********changes on 25-july************/
function product_details_form($form, &$form_state) {
    
 // $values = isset($form_state['multistep_values']['product_details']) ? $form_state['multistep_values']['product_details'] : array();

$eid = arg(3);
$values = getOverviewData($eid);

  $form['product_details'] = array(
    '#prefix' => '<div><h2>Overview</h2>',
    '#suffix' => '</div>',
  );
$experienceType=getExperienceType();
//$experienceType['']=t('--Select Experience Type--');
array_unshift($experienceType,t('--Select Experience Type--'));
$experienceCategory=getExperienceCategory();
  $form['product_details']['product_type'] = array(
    '#type' => 'select',
    '#prefix' => '<div class="product-type-category">',
    '#title' => t('Experience Type'),
    '#default_value' => isset($values['experience_type']) ? $values['experience_type'] : 0,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options'=>$experienceType,
	'#required' => TRUE
  );

  $form['product_details']['product_category'] = array(
    '#type' => 'select',
    '#suffix' => '</div>',
    '#title' => t('Experience category'),
    //'#default_value' => isset($values['experience_category']) ? $values['experience_category'] :0,
	 '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#options'=>$experienceCategory,
	//'#required' => TRUE,
  );
  
 $form['product_details']['experiencehtml'] = array(
 '#type' => 'markup',
 '#markup' => '<h3>'.t('About your Experience').'</h3>',
); 
  $form['product_details']['product_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Experience title'),
    '#description' => t('Max 35 characters'),
    '#default_value' => isset($values['title']) ? $values['title'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	  '#maxlength' =>35,
	'#required' => TRUE
  );

  //$form['#attributes'] = array('enctype' => 'multipart/form-data');

  $form['product_details']['short_description'] = array(
    '#type' => 'textarea',
    '#title' => t('What to Expect'),
    '#default_value' => isset($values['short_description']) ? $values['short_description'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#required' => TRUE
  );
 $form['product_details']['expect'] = array(
    '#type' => 'textarea',
    '#title' => t('Long Description'),
    '#default_value' => isset($values['brief_description']) ? $values['brief_description'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#required' => TRUE
  ); 
  $form['product_details']['itinerary'] = array(
    '#type' => 'textarea',
    '#title' => t('Itinerary'),
    '#default_value' => isset($values['itinerary']) ? $values['itinerary'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#required' => TRUE
  ); 
  /*  $form['product_details']['long_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Describe your experience'),
    '#default_value' => isset($values['brief_description']) ? $values['brief_description'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#required' => TRUE
  );  */
   /*  $form['product_details']['traveller_access'] = array(
    '#type' => 'textarea',
    '#title' => t('What can Travelers access'),
    '#default_value' => isset($values['traveller_access']) ? $values['traveller_access'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#required' => TRUE
  ); */
  $form['product_details']['communication'] = array(  
   '#type' => 'textarea',
    '#title' => t('Communication with travelers'),
    //'#description' => t('Max 35 characters'),
    '#default_value' => isset($values['communication_with_traveller']) ? $values['communication_with_traveller'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  )
	//'#required' => TRUE
  );

/*  $form['product_details']['neighbourhtml'] = array(
 '#type' => 'markup',
 '#markup' => '<h3>'.t('The Neighborhood').'</h3>',
);
 $form['product_details']['whats_around'] = array(
    '#type' => 'textarea',
    '#title' => t('What\'s around'),
    '#default_value' => isset($values['around_places']) ? $values['around_places'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#required' => TRUE
  );
   $form['product_details']['transportation'] = array(
    '#type' => 'textfield',
    '#title' => t('Transportation'),
    '#default_value' => isset($values['transportation']) ? $values['transportation'] : '',
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	//'#required' => TRUE
  ); */

  $form['page'] = array(
    '#type' => 'hidden',
    '#default_value' => 'product_amenities'
  );
  
  $form['eid'] = array(
    '#type' => 'hidden',
    '#default_value' => isset($values['eid']) ? $values['eid'] : 0,
  );
  
   $form['save']=array(
               '#type' => 'submit',
			   '#value' => t('Save'),
			   '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
                  );
  
 /*  $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  );
  
  $form['next'] = array(
    '#type' => 'submit',
    '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  ); */
    
  return $form;
}
function product_details_form_submit($form, &$form_state)
{
global $user;
/*  
echo "<pre>";
print_r($form_state["values"]);
die; */
if($form_state["values"]["eid"]){
/*  $query=db_update('gbl_experience_list')
      ->fields(array('experience_type'=>$form_state['values']['product_type'],'experience_category'=>$form_state['values']['product_category'],
	  'title'=>$form_state['values']['product_name'],'short_description'=>$form_state['values']['short_description'],
	  'brief_description'=>$form_state['values']['long_description'],'traveller_access'=>$form_state['values']['traveller_access'],
	  'communication_with_traveller'=>$form_state['values']['communication'],'around_places'=>$form_state['values']['whats_around'],
	  'transportation'=>$form_state['values']['transportation'],'modified'=>time()
	    ))->condition('eid',$form_state["values"]["eid"]);	 */
		$query=db_update('gbl_experience_list')
      ->fields(array('experience_type'=>$form_state['values']['product_type'],'experience_category'=>$form_state['values']['product_category'],
	  'title'=>$form_state['values']['product_name'],'short_description'=>$form_state['values']['short_description'],
	  'brief_description'=>$form_state['values']['expect'],'itinerary'=>$form_state['values']['itinerary'],
	  'communication_with_traveller'=>$form_state['values']['communication'],'modified'=>time()
	    ))->condition('eid',$form_state["values"]["eid"]);	
     $result=$query->execute();	 

	 if($result)
	 {	
		 $_SESSION['product_id']=$form_state["values"]["eid"];		 
		 drupal_set_message(t('Product Overview data updated successfully'));
		 drupal_goto('product/add/photos/'.urlencode($form_state["values"]["eid"]));
	 }
}
else{
$query=db_insert('gbl_experience_list')
      ->fields(array('experience_type'=>$form_state['values']['product_type'],'experience_category'=>$form_state['values']['product_category'],
	  'title'=>$form_state['values']['product_name'],'short_description'=>$form_state['values']['short_description'],
	  'brief_description'=>$form_state['values']['expect'],'itinerary'=>$form_state['values']['itinerary'],
	  'communication_with_traveller'=>$form_state['values']['communication'],'created'=>time()
	    ));
 /* $query=db_insert('gbl_experience_list')
      ->fields(array('experience_type'=>$form_state['values']['product_type'],'experience_category'=>$form_state['values']['product_category'],
	  'title'=>$form_state['values']['product_name'],'short_description'=>$form_state['values']['short_description'],
	  'brief_description'=>$form_state['values']['long_description'],'traveller_access'=>$form_state['values']['traveller_access'],
	  'communication_with_traveller'=>$form_state['values']['communication'],'around_places'=>$form_state['values']['whats_around'],
	  'transportation'=>$form_state['values']['transportation'],'created'=>time()
	    ));	  */
     $result=$query->execute();	

	 if($result)
	 {	
		 $_SESSION['product_id']=$result;		 
		 drupal_set_message(t('Product Overview data saved successfully'));
		 drupal_goto('product/add/photos/'.urlencode($result));
	 }
}

}
function product_photos_form($form, &$form_state){

	$values = isset($form_state['multistep_values']['product_photos']) ? $form_state['multistep_values']['product_photos'] : array();
  
	$form['picture_upload'] = array(
	  '#type' => 'plupload',
	  '#title' => t('Upload files'),
	  '#description' => t('This multi-upload widget uses Plupload library.'),
	  //'#autoupload'=>TRUE,
	  //'#autosubmit'=>TRUE,
	  '#upload_validators' => array(
		'file_validate_extensions' => array('jpg jpeg gif png txt doc xls pdf ppt pps odt ods odp'),
		//'my_custom_file_validator' => array('some validation criteria'),
	  ),
	  '#plupload_settings' => array(
		'runtimes' => 'html5',
		'chunk_size' => '1mb',
	  ),
	);
 
    $form['save']=array(
               '#type' => 'submit',
			   '#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
			   '#value' => t('Save')
    );
	
	 return $form;
}

function product_amenities_form($form, &$form_state){
	$amenitiesdatas=getAmentiesByproduct(arg(3));
	$amenitiesId=array();
	  foreach($amenitiesdatas as $amenitiesdata)
	  {
	  $amenitiesId[]=$amenitiesdata['value1'];
	  }
	  $form['product_amenities'] = array(
		'#prefix' => '<div><h2>Common Amenities</h2>',
		'#suffix' => '</div>',
	  );
	  $commonAmenties=getAmentiesdata('common');
	   if(count($commonAmenties>0))
	  {
	   $form['basic'] = array(
		'#prefix'=> '<div class="amenities-common"><ul>'   
	  );
	  foreach($commonAmenties as $amenties)
	  {
	  
	  $idlower=trim(strtolower($amenties['amenties_name']));
	  $id=str_replace(" ","-",$idlower);  
		  if($amenties['description'] != ""){
				$form['basic'][$id] = array(
				'#prefix' => '<li><label for="'.$id.'">',
				'#suffix' => '</li></label>',
				'#type'=>'checkbox',
				'#title'=>$amenties['amenties_name']."  <strong id='hint' rel='".$amenties['description']."'>?</strong>",
				'#value'=>(in_array($amenties['aid'],$amenitiesId))?1:0,
				// '#value' =>$amenties['aid'],		
			   '#name' => $amenties['aid'],
				'#attributes' => array('class' => array('icon-question')), 
				
				);
		  }
		  else{
				$form['basic'][$id] = array(
				'#prefix' => '<li><label for="'.$id.'">',
				'#suffix' => '</li></label>',
				'#type'=>'checkbox',
				'#title'=>$amenties['amenties_name'],
				'#value'=>(in_array($amenties['aid'],$amenitiesId))?1:0,
				// '#value' =>$amenties['aid'],		
			   '#name' => $amenties['aid'],
				'#attributes' => array('class' => array('icon-question')), 
				
				);		  
		  }
	  }
	  $form['basic-close']=array(
		'#suffix'=> '</ul></div>',
	  );
	  }
	  /************************************************/
	   $form['product_amenities_safety'] = array(
		'#prefix' => '<div><h2>Safety</h2>',
		'#suffix' => '</div>',
	  );
	   $safetyAmenties=getAmentiesdata('safety');
	   if(count($safetyAmenties>0))
	  {
	  $form['basic-safety'] = array(
		'#prefix'=> '<div class="amenties-safety"><ul>',  
	  );
	  foreach($safetyAmenties as $amenties)
	  {
	  $idlower=trim(strtolower($amenties['amenties_name']));
	  $id=str_replace(" ","-",$idlower); 
		if($amenties['description'] != ""){
		   $form['basic-safety'][$id] = array(
			'#prefix' => '<li><label for="'.$id.'">',
			'#suffix' => '</li></label>',
			'#type'=>'checkbox',
			'#title'=>$amenties['amenties_name']."  <strong id='hint' rel='".$amenties['description']."'>?</strong>",
			'#value'=>(in_array($amenties['aid'],$amenitiesId))?1:0,
			'#name' =>$amenties['aid'],
			'#attributes' => array('class' => array('icon-question')),
			
			); 
		}
		else{
		   $form['basic-safety'][$id] = array(
			'#prefix' => '<li><label for="'.$id.'">',
			'#suffix' => '</li></label>',
			'#type'=>'checkbox',
			'#title'=>$amenties['amenties_name'],
			'#value'=>(in_array($amenties['aid'],$amenitiesId))?1:0,
			'#name' =>$amenties['aid'],
			'#attributes' => array('class' => array('icon-question')),
			
			); 		
		}
	  }	
		 $form['safety-close']=array(
		'#suffix'=> '</ul></div>',
	  );

		}
	if(count($amenitiesdata)>0)
	{
	 $form['save'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Update'),
		  );

	}
	else
	{
	   $form['save'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Save'),
		  );
	}

	  
	  /* $form['back'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Back')
	  );
	  
	  $form['next'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Next')
	  ); */
		
	  return $form;
}

function product_amenities_form_submit($form, &$form_state)
{
if($form_state["values"]["op"]=="Update")
{
$query=db_delete('gbl_listing_meta')
          ->condition('listing_id',arg(3),'=')		 
          ->condition('key1','amenities','=')		 
		  ->execute();
	foreach($_REQUEST as $key=>$value)
	{
			if (is_numeric($key))
			{
			$query=db_insert('gbl_listing_meta')
				  ->fields(array('listing_id'=>arg(3),'key1'=>'amenities','value1'=>$key))
				  ->execute();
			}
	}		  
		  
}
	else
	{
		foreach($_REQUEST as $key=>$value)
			{
				if (is_numeric($key))
				{
				$query=db_insert('gbl_listing_meta')
					  ->fields(array('listing_id'=>arg(3),'key1'=>'amenities','value1'=>$key))
					  ->execute();
				}
			}
		}

	}
/*********************************************************************************/
function product_location_info_form($form,&$form_state)
	{
	$countryList=getCountryList();
	$productId=(Integer)arg(3);
     if (is_int($productId))
	 {
	$productDetail=getListingData($productId);
	}
	$form=array();
	$form['product_address'] = array(
    '#prefix' => '<div><h2>'.t('Enter Address').'</h2>',
    '#suffix' => '</div>',
  );
	
  $form['address1'] = array(
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),'placeholder' => t('ex. Rua Bossoroca, 1')
	),
    '#title' => t('Address Line 1'),
	'#required' => TRUE,
	'#default_value' => ($productDetail['address1'])?$productDetail['address1'] :"",
  );
  $form['address2'] = array(

    '#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),'placeholder' => t('"ex. apt 50')	),
    '#title' => t('Address Line 2'), 
    '#default_value' => ($productDetail['address2'])?$productDetail['address2'] :"",	
  );
  $form['city'] = array(
	
    '#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),
	),
	//'#attributes' =>array('placeholder' => t(''))
    '#title' => t('City'),
    '#required' => TRUE ,
    '#default_value' => ($productDetail['city'])?$productDetail['city'] :"",		
  );
	 $form['state'] = array(
	'#type' => 'textfield',
	'#attributes' => array(	'class' => array('form-control'),),
    '#title' => t('State / Province / Region'),
    '#required' => TRUE ,
     '#default_value' => ($productDetail['state'])?$productDetail['state'] :"",	
  );
  $form['zipcode'] = array(
	'#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),'placeholder' => t('ex. 437719')
	),	
    '#title' => t('ZIP / Postal Code'),  
    '#maxlength' =>10,
	'#default_value' => ($productDetail['zipcode'])?$productDetail['zipcode'] :"",	
    //'#required' => TRUE	,
	// '#element_validate' => array('element_validate_integer_positive'),
  );
    $form['country'] = array(
	//'#prefix' => '<div class="product-extra" style="display:none;">',
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),	
    '#title' => t('Country'),   
    '#required' => TRUE	,
	'#options'=>$countryList,
	'#default_value' => ($productDetail['country'])?$productDetail['country'] :"",
  );
  $form['next'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
	
  );
  $form['cancel'] = array(
    '#type' => 'button',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Cancel')
	
  ); 
  return $form;
	}
/*********************************************************************************/
function product_extra_form($form, &$form_state){
	$metaID = arg(4);
	$extraDetails1 = getExtraDetails($metaID);
	$extraDetails = unserialize($extraDetails1["value1"]);
	
/* 	echo "<pre>";
	print_r($extraDetails); die; */
	
  $form['product_extra']['new_extra'] = array(
	'#prefix' => '<div class="product-extra">',
    '#type' => 'textfield',
    '#required' => TRUE,
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#title' => t('New extra'),
    '#default_value' => isset($extraDetails['title']) ? $extraDetails['title'] : NULL,
  );
  
  $form['product_extra']['extra_price_value'] = array(
    '#type' => 'textfield',
    '#prefix' => '<div class="product_extra_price">',
	'#attributes' => array(
		'class' => array('form-control','themePrice'),
	),
    '#title' => t('Price'),
	'#required' => TRUE,
    '#default_value' => isset($extraDetails['price']) ? $extraDetails['price'] : NULL,
  );
  
  $form['product_extra']['extra_price_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($extraDetails['price-type']) ? $extraDetails['price-type'] : NULL,
	'#options' => array('%'=>'Amount in %','$'=>'Amount in $'),
	'#suffix' => '</div>'
  );
  
/*   $form['product_extra']['extra_price_key'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($extraDetails['price-key']) ? $extraDetails['price-key'] : NULL,
	'#options' => array('per-day'=>'Per Day','per-stay'=>'Per Stay','per-item'=>'Per Item','per-hour'=>'Per Hour'),
	'#suffix' => '</div>'
  ); */
  
  $form['product_extra']['extra_price_key'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['extra_price_key']) ? $values['extra_price_key'] : NULL,
	'#options' => array('customer-choice'=>'Customer Choice','per-order'=>'Per Order','per-quantity'=>'Per Quantity'),
	'#suffix' => '</div>'
  );
 
  $form['product_extra']['product_extra_description'] = array(
    '#type' => 'textarea',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#title' => t('Description'),
    '#default_value' => isset($extraDetails['description']) ? $extraDetails['description'] : NULL,
  ); 
  
   $form['metaID'] = array(
    '#type' => 'hidden',
    '#default_value' => isset($extraDetails1['meta_id']) ? $extraDetails1['meta_id'] : NULL,
  ); 

  $form['page'] = array(
    '#type' => 'hidden',
    '#default_value' => 'product_subscription'
  );
  
/*   $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  ); */
  
  $form['next'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Save')
	
  );
    
  return $form;
}

function product_pricing_form($form, &$form_state){
  $eid = arg(3);
  $pricingData = getPricingData($eid);
  
  $listingData =getListingData($eid);
   /* echo "<pre>";
  print_r($pricingData);
  die; */ 
  $values = unserialize($pricingData["value1"]);
  
   /*  echo "<pre>";
  print_r($values);  */
  /*die;  */

  $form['product_pricing'] = array(
    '#prefix' => '<div><h2>Pricing</h2>',
    '#suffix' => '</div>',
  );
 
 $form['product_pricing']['season_rate_label'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="quantity product_season_rate" id="product_season_rate">',
	'#title' => t('Rate Label'), 
    '#default_value' => isset($listingData['season_rate_label']) ? $listingData['season_rate_label'] : NULL,
	'#attributes' => array('placeholder'=>'Rate Label','class' => array('form-control')),
  );
  
 $form['product_pricing']['season_rate_amount'] = array(
    '#type' => 'textfield',
	'#title' => t('Rate Price'), 
    '#default_value' => isset($listingData['season_rate_amount']) ? $listingData['season_rate_amount'] : NULL,
	'#attributes' => array('placeholder'=>'Rate Price','class' => array('form-control','themePrice')),
  );

  $form['product_pricing']['high_season_rate_dates'] = array(
    '#type' => 'textfield',
    '#title' => t('From - To'), 
	  '#attributes' => array('placeholder'=>'From - To',
		'class' => array('form-control'),
	  ),
/*  	'#suffix' => '</div>', */
    '#default_value' => isset($listingData['high_season_rate_dates']) ? $listingData['high_season_rate_dates'] : NULL,
  );

	$form['product_pricing']['add_new'] = array(
		'#prefix' => '<div><a class="btn btn-dark btn-gradient form-submit" href="#" id="addRate">Add Rate</a>',
		'#suffix' => '</div></div>',
	);
  if(count($values["season_rate_label_extra"])>0)
{
/*  echo "<pre>";
print_r($values["season_rate_amount_extra"]);
die; */
 foreach ($values["season_rate_label_extra"] as $key => $value)
{

 $form['product_pricing']['season_rate_label_extra'.$key] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="quantity product_season_rate" id="product_season_rate_'.$key.'">',
	'#title' => t('Rate Label'), 
    '#default_value' => ($value)?$value:'',
	'#attributes' => array('placeholder'=>'Rate Label','class' => array('form-control'),'name'=>'season_rate_label_extra['.$key.']'),
);
$form['product_pricing']['season_rate_amount_extra'.$key] = array(
    '#type' => 'textfield',
	'#title' => t('Rate Price'), 
    '#default_value' => ($values["season_rate_amount_extra"][$key])?$values["season_rate_amount_extra"][$key]:'',
	'#attributes' => array('placeholder'=>'Rate Price','class' => array('form-control','themePrice'),'name'=>'season_rate_amount_extra['.$key.']'),
/* 	'#description' => 'Add rate i.e High Season rate' */
  );

  $form['product_pricing']['high_season_rate_dates_extra'.$key] = array(
    '#type' => 'textfield',
/* 	'#prefix' => '<div class="quantity">',*/
    '#title' => t('From - To'), 
	  '#attributes' => array('placeholder'=>'From - To','class' => array('form-control'),'name'=>'high_season_rate_dates_extra['.$key.']' ),
/* 	'#suffix' => '</div>', */
    '#default_value' => ($values["high_season_rate_dates_extra"][$key])?$values["high_season_rate_dates_extra"][$key]:'',
  );

}
}
   $form['product_pricing']['product_pricing_type'] = array(
    '#type' => 'select',
    '#prefix' => '<div class="product_pricing">',
    '#title' => t('Product pricing'),
    '#default_value' => isset($values['product_pricing_type']) ? $values['product_pricing_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('PER_PERSON'=>'By Person','PER_ITEM'=>'By Item','FIXED'=>'Fixed','PER_DAY' => 'By Day','PER_HOUR'=>'By Hour','PER_MINUTE'=>'By Minute')
  );
  
  $form['product_pricing']['product_pricing_key'] = array(
    '#type' => 'select',
	'#prefix' => '<div class="product_pricing_key_label">',
    '#default_value' => isset($values['product_pricing_key']) ? $values['product_pricing_key'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('everyone'=>'Everyone','adult'=>'Adult','child'=>'Child','everyone'=>'Everyone','senior'=>'Senior','teenager'=>'Teenager','student'=>'Student','family-of-three'=>'Family of 3','family-of-four'=>'Family of 4','family-of-five'=>'Family of 5','group'=>'Group')
  );
  
  $form['product_pricing']['product_item_label'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_item_label']) ? $values['product_item_label'] : NULL,
	'#attributes' => array('placeholder'=>'Label','class' => array('form-control')),
	'#suffix' => '</div>'
  );
 
  $form['product_pricing']['product_pricing_min'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="product_pricing_key_label">',
    '#default_value' => isset($values['product_pricing_min']) ? $values['product_pricing_min'] : NULL,
	'#attributes' => array('placeholder'=>'min','class' => array('form-control')),
  );
  
  $form['product_pricing']['product_pricing_max'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_pricing_max']) ? $values['product_pricing_max'] : NULL,
	'#attributes' => array('placeholder'=>'max','class' => array('form-control')),
	'#suffix' => '</div>'
  );

   $form['product_pricing']['product_pricing_max_participants'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($values['product_pricing_max_participants']) ? $values['product_pricing_max_participants'] : NULL,
	'#attributes' => array('placeholder'=>'Max participants','class' => array('form-control')),
  );
  
  $form['product_pricing']['product_pricing_value'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="product_pricing_key_label">',
    '#default_value' => isset($values['product_pricing_value']) ? $values['product_pricing_value'] : NULL,
	'#attributes' => array('placeholder'=>'Price','class' => array('form-control','themePrice')),
  );

   $form['product_pricing']['product_pricing_person_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_person_type']) ? $values['product_pricing_person_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('per-person'=>'Per person','TOTAL'=>'Total')
  ); 
  
  $form['product_pricing']['product_pricing_day_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_day_type']) ? $values['product_pricing_day_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#suffix' => '</div>',
	'#options' => array('EACH'=>'Per day','TOTAL'=>'Total')
  );
  
  $form['product_pricing']['product_pricing_hour_type'] = array(
    '#type' => 'select',
	'#prefix' => '<div class="product_pricing_key_label">',
    '#default_value' => isset($values['product_pricing_hour_type']) ? $values['product_pricing_hour_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('EACH'=>'Per hour','TOTAL'=>'Total')
  );
  
  $form['product_pricing']['product_pricing_minute_type'] = array(
    '#type' => 'select',
    '#default_value' => isset($values['product_pricing_minute_type']) ? $values['product_pricing_minute_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#suffix' => '</div>',
	'#options' => array('EACH'=>'Per minute','TOTAL'=>'Total')
  );

	$form['product_pricing']['schedule_type'] = array(
		'#type' => 'select',
		'#title' => 'Apply to schedule',
		'#default_value' => isset($values['schedule_type']) ? $values['schedule_type'] : NULL,
		  '#attributes' => array(
			'class' => array('form-control'),
		  ),
		'#suffix' => '</div>',
		'#options' => array('1'=>'schedule 1','2'=>'schedule 2')
	); 
  
  $form['product_pricing']['quantity-heading'] = array(
    '#prefix' => '<div><h2>Quantity</h2>',
    '#suffix' => '</div>',
  );
 
  $form['product_pricing']['product_pricing_quantity_type'] = array(
    '#type' => 'select',
	'#prefix' => '<div class="quantity product_pricing_quantity">',
    '#default_value' => isset($values['product_pricing_quantity_type']) ? $values['product_pricing_quantity_type'] : NULL,
	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#options' => array('Limited'=>'Limited - Fixed Limit per person','Unlimited'=>'Unlimited Free Sale')
  );
  
  $form['product_pricing']['quantity_min'] = array(
    '#type' => 'textfield',
	'#title' => 'Min.',
	  '#attributes' => array('placeholder'=>'Min.',
		'class' => array('form-control'),
	  ),
    '#default_value' => isset($values['quantity_min']) ? $values['quantity_min'] : NULL,
  );
  
  $form['product_pricing']['quantity_max'] = array(
    '#type' => 'textfield',
    '#title' => 'Max.',
    '#default_value' => isset($values['quantity_max']) ? $values['quantity_max'] : NULL,
	  '#attributes' => array('placeholder'=>'Max.',
		'class' => array('form-control'),
	  ),
  );
  
  $form['product_pricing']['quantity_label'] = array(
    '#type' => 'textfield',
	'#title' => 'Label',
	'#suffix' => '</div>',
    '#default_value' => isset($values['quantity_label']) ? $values['quantity_label'] : NULL,
	  '#attributes' => array('placeholder'=>'Label',
		'class' => array('form-control'),
	  ),
  );
  

  $form['product_pricing']['offers_and_discounts'] = array(
    '#prefix' => '<div><h2>Offers a Discounts</h2>',
     '#suffix' => '</div>', 
  );
  
  $form['product_pricing']['early_birds'] = array(
    '#prefix' => '<div><h5>Early Birds</h5>',
/*     '#suffix' => '</div>', */
  );
 
  $form['product_pricing']['early_birds_time_value'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="early-birds">',
    '#title' => t('If booking'),
	  '#attributes' => array('placeholder'=>'Days or Months',
		'class' => array('form-control'),
	  ),
    '#default_value' => isset($values['early_birds_time_value']) ? $values['early_birds_time_value'] : NULL,
  );
 
  $form['product_pricing']['early_birds_time_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['early_birds_time_type']) ? $values['early_birds_time_type'] : NULL,
	'#options' => array('day'=>'Day','month'=>'Month'),
  );

  $form['product_pricing']['early_birds_price_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array('placeholder'=>'Price',
		'class' => array('form-control','themePrice'),
	),
    '#title' => t('prior to Arrival date'),
	'#required' => TRUE,
    '#default_value' => isset($values['early_birds_price_value']) ? $values['early_birds_price_value'] : NULL,
  );
  
  $form['product_pricing']['early_birds_price_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['early_birds_price_type']) ? $values['early_birds_price_type'] : NULL,
	'#options' => array('%'=>'Amount in %','$'=>'Amount in $'),
	'#suffix' => '<h4>'.t('on total Amount').'</h4>',
  );

  	$form['product_pricing']['schedule_type_early_bids'] = array(
		'#type' => 'select',
		'#title' => 'Apply to schedule',
		'#default_value' => isset($values['schedule_type_early_bids']) ? $values['schedule_type_early_bids'] : NULL,
		  '#attributes' => array(
			'class' => array('form-control'),
		  ),
		'#suffix' => '</div>',
		'#options' => array('1'=>'schedule 1','2'=>'schedule 2')
	); 
	
/*   $form['product_pricing']['early_birds']['total_amount'] = array( 
     '#markup' => '',
	//'#title'=> t('(in %) refunded on the entire stay'),
    '#suffix' => '</div>',
  ); */

  $form['product_pricing']['last_minutes'] = array(
    '#prefix' => '</div><div><h5>Last Minute</h5>',
    '#suffix' => '</div>',
  );
 
  $form['product_pricing']['last_minutes_time_value'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="early-birds">',
    '#title' => t('If booking'),
	  '#attributes' => array('placeholder'=>'Days or Months',
		'class' => array('form-control'),
	  ),
    '#default_value' => isset($values['last_minutes_time_value']) ? $values['last_minutes_time_value'] : NULL,
  );
 
  $form['product_pricing']['last_minutes_time_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['last_minutes_time_type']) ? $values['last_minutes_time_type'] : NULL,
	'#options' => array('day'=>'Day','month'=>'Month'),
  );

  $form['product_pricing']['last_minutes_price_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array('placeholder'=>'Price',
		'class' => array('form-control','themePrice'),
	), 
    '#title' => t('prior to Arrival date'),

	'#required' => TRUE,
    '#default_value' => isset($values['last_minutes_price_value']) ? $values['last_minutes_price_value'] : NULL,
  );
  
  $form['product_pricing']['last_minutes_price_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['last_minutes_price_type']) ? $values['last_minutes_price_type'] : NULL,
	'#options' => array('%'=>'Amount in %','$'=>'Amount in $'),
	'#suffix' => '<h4>'.t('on total Amount').'</h4>',
  );

/*   $form['product_pricing']['last_minutes']['total_amount'] = array( 
     '#markup' => '</div><h4>'.t('on total Amount').'</h4>',
	//'#title'=> t('(in %) refunded on the entire stay'),
    '#suffix' => '</div>',
  );   */
 
  	$form['product_pricing']['schedule_type_last_minutes'] = array(
		'#type' => 'select',
		'#title' => 'Apply to schedule',
		'#default_value' => isset($values['schedule_type_last_minutes']) ? $values['schedule_type_last_minutes'] : NULL,
		  '#attributes' => array(
			'class' => array('form-control'),
		  ),
		'#suffix' => '</div>',
		'#options' => array('1'=>'schedule 1','2'=>'schedule 2')
	); 
  
  $form['product_pricing']['24_hour_offer'] = array(
    '#prefix' => '</div><div><h5>24 Hour Offer</h5>',
    '#suffix' => '</div>',
  );
 
  $form['product_pricing']['24_hour_offer']['24_hour_offer_date'] = array(
    '#type' => 'textfield',
	'#prefix' => '<div class="early-birds-hour-offer">',
    '#title' => t('If booking made on'),
	  '#attributes' => array('placeholder'=>'Date',
		'class' => array('form-control','datepicker'),
	  ),
    '#default_value' => isset($values['24_hour_offer_date']) ? $values['24_hour_offer_date'] : NULL,
  );

  $form['product_pricing']['24_hour_offer']['24_hour_offer_price_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array('placeholder'=>'Price',
		'class' => array('form-control','themePrice'),
	),
/*     '#title' => t('prior to Arrival date'), */
	'#required' => TRUE,
    '#default_value' => isset($values['24_hour_offer_price_value']) ? $values['24_hour_offer_price_value'] : NULL,
  );
  
   $form['product_pricing']['24_hour_offer']['24_hour_offer_price_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($extraDetails['24_hour_offer_price_type']) ? $extraDetails['24_hour_offer_price_type'] : NULL,
	'#options' => array('%'=>'Amount in %','$'=>'Amount in $'),
  ); 

  $form['product_pricing']['24_hour_offer']['total_amount'] = array( 
     '#markup' => '<h4>'.t('in % on total Amount').'</h4>',
	//'#title'=> t('(in %) refunded on the entire stay'),
    /* '#suffix' => '</div>', */
  );  
  	$form['product_pricing']['schedule_type_24_hours'] = array(
		'#type' => 'select',
		'#title' => 'Apply to schedule',
		'#default_value' => isset($values['schedule_type_24_hours']) ? $values['schedule_type_24_hours'] : NULL,
		  '#attributes' => array(
			'class' => array('form-control'),
		  ),
		'#suffix' => '</div>',
		'#options' => array('1'=>'schedule 1','2'=>'schedule 2')
	);
  $form['metaID'] = array(
	'#type' => 'hidden',
	'#default_value' => arg(3),
	//'#default_value' => isset($pricingData['meta_id']) ? $pricingData['meta_id'] :arg(3),
  );
  
  $form['page'] = array(
	'#type' => 'hidden',
	'#default_value' => 'product_rules'
  );
	
/*   $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  ); */
  
  $form['save'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Save')
  );
    
  return $form;

}

function product_rules_form($form, &$form_state){
	$metaID = arg(3);
	$rules = getRulesDetails($metaID);
	$values = unserialize($rules["value1"]);

	$form['product_rules'] = array(
		'#prefix' => '<div><h2>Rules & Policies</h2>',
		'#suffix' => '</div>',
	);

	$form['product_rules']['ruleshtml'] = array(
		'#type' => 'markup',
		'#markup' => '<h3>'.t('Rules').'</h3>',
	);
	$form['product_rules']['experience_rules'] = array(
		'#type' => 'textarea',
		'#title' => t('Experience Rules'),
		'#default_value' => isset($values['experience_rules']) ? $values['experience_rules'] :  '',
		'#attributes' => array(
		'class' => array('form-control'),
		),
	);
  $form['product_rules']['experience_manual'] = array(
    '#type' => 'textarea',
    '#title' => t('Experience Manual'),
	'#default_value' => isset($values['experience_manual']) ? $values['experience_manual'] : '',
 	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
  );


/************************************************************************/
  $form['product_rules']['CancellationPolicies'] = array(
 '#type' => 'markup',
 '#markup' => '<h3>'.t('Cancellation Policies').'</h3>',
);

$form['product_rules']['cancellation_policies_type'] = array(
'#type' => 'select',
'#title' => t('Cancellation Policies'),
'#default_value' => isset($values['cancellation_policies_type']) ? $values['cancellation_policies_type'] : 0,
  '#attributes' => array(
	'class' => array('form-control'),
  ),
'#options'=>array('Relaxed'=>'Relaxed','Flexible'=>'Flexible','Moderate'=>'Moderate','Strict'=>'Strict','Super-Strict'=>'Super Strict','Custom'=>'Custom'),
/* '#required' => TRUE */
);

$form['product_rules']['cancellation_policies_relaxed'] = array(
	'#prefix' => "<div class='relaxed'><h2>Relaxed</h2><p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
	</p>",
	'#suffix' => '</div>',
);

$form['product_rules']['cancellation_policies_flexible'] = array(
	'#prefix' => "<div class='flexible'><h2>Flexible</h2><p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
	</p>",
	'#suffix' => '</div>',
);

$form['product_rules']['cancellation_policies_moderate'] = array(
	'#prefix' => "<div class='moderate'><h2>Moderate</h2><p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
	</p>",
	'#suffix' => '</div>',
);

$form['product_rules']['cancellation_policies_text_strict'] = array(
	'#prefix' => "<div class='strict'><h2>Strict</h2><p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
	</p>",
	'#suffix' => '</div>',
);

$form['product_rules']['cancellation_policies_super_strict'] = array(
	'#prefix' => "<div class='super_strict'><h2>Super Strict</h2><p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
	</p>",
	'#suffix' => '</div>',
);
  
  
$form['product_rules']['cancellation_policy_entire'] = array(  
	'#prefix' => '<div class="cancelation-policy-entire-stay">',	
  );
 $form['product_rules']['cancellation_policy_entire_prior_day'] = array( 
  //'#prefix' => '<div class="numbers-row">',
    '#type' => 'textfield',
 	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	'#default_value' => isset($values['entire_prior_day']) ? $values['entire_prior_day'] : 1,
 	 '#title' => t('If travelers cancel'),
   //   '#suffix' => '</div>',	 
  ); 
   $form['product_rules']['cancellation_policy_entire_prior_amount'] = array( 
  // '#prefix' => '<div class="numbers-row">',
    '#type' => 'textfield',
 	 '#title' => t('days prior to arrival date Amount '),
 	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
	 '#default_value' => isset($values['entire_prior_amount']) ? $values['entire_prior_amount'] : 1,
   //   '#suffix' => '</div>',	 
  ); 
  $form['product_rules']['cancellation_policy_entire_amount_refund'] = array( 
     '#markup' => '<h4>'.t('(in %) refunded on the entire stay').'</h4>',
	//'#title'=> t('(in %) refunded on the entire stay'),
    '#suffix' => '</div>',
  );
  /**/
  $form['product_rules']['cancellation_policy_pending'] = array(  
	'#prefix' => '<div class="cancelation-policy-pending-stay">',	
  );
 $form['product_rules']['cancellation_policy_pending_day'] = array( 
  //'#prefix' => '<div class="numbers-row">',
    '#type' => 'textfield',
 	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
 	 '#title' => t('If travelers cancel'),
	 '#default_value' => isset($values['policy_pending_day']) ? $values['policy_pending_day'] : 1,
	//   '#suffix' => '</div>',	
  ); 
   $form['product_rules']['cancellation_policy_pending_amount_after_arrival'] = array( 
   //  '#prefix' => '<div class="numbers-row">',
    '#type' => 'textfield',
 	  '#attributes' => array(
		'class' => array('form-control'),
	  ),
 	 '#title' => t('days after arrival date Amount '),
	 '#default_value' => isset($values['policy_pending_amount_after_arrival']) ? $values['policy_pending_amount_after_arrival'] : 1,
	//    '#suffix' => '</div>',	 
  ); 
  $form['product_rules']['cancellation_policy_pending_amount_refund'] = array( 
     '#markup' => '<h4>'.t('(in %) refunded on the pending stay duration').'</h4>',
	//'#title'=> t('(in %) refunded on the entire stay'),
    '#suffix' => '</div>',
  );
/************************************************************************/

  $form['metaID'] = array(
	'#type' => 'hidden',
	'#default_value' => isset($rules['meta_id']) ? $rules['meta_id'] : NULL,
  );
  
  $form['page'] = array(
	'#type' => 'hidden',
	'#default_value' => 'product_extra'
  );
  
	/*$form['back'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Back')
	);*/

	$form['save'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Save')
	);

	return $form;
	
}

function product_booking_info_form($form, &$form_state){
  $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  );
  
  $form['next'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  );
    
  return $form;
}

function product_catalogs_form($form, &$form_state){
  $values = isset($form_state['multistep_values']['product_catalogs']) ? $form_state['multistep_values']['product_catalogs'] : array();
  
  $form['product_catalogs']['onilne_bookings'] = array(
    '#prefix' => '<div class="onilne-bookings"><h3>Online bookings</h3>',

  );
  
  $form['product_catalogs']['onilne_bookings_tours'] = array(
    '#type' => 'checkbox',
    '#title' => t('TOURS'),
	'#suffix' => '</div>',
  );
  
  $form['product_catalogs']['partners'] = array(
    '#prefix' => '<div class="partners"><h3>Partners</h3>',

  );
  
  $form['product_catalogs']['my_partners'] = array(
    '#type' => 'checkbox',
    '#title' => t('My partners'),
	'#suffix' => '</div>',
	'#prefix' => '<div class="my-partners">',
  );
  
  $form['product_catalogs']['my_partners_commission'] = array(
    '#type' => 'textfield',
    '#title' => t('COMMISSION'),
	'#attributes' => array(
		'class' => array('form-control'),
	),
	'#default_value' => isset($values['my_partners_commission']) ? $values['my_partners_commission'] : NULL,
	'#suffix' => '</div>',
  );
  
  
  $form['product_catalogs']['gloobers_community'] = array(
    '#prefix' => '<div class="gloobers-community"><h3>Gloobers Community</h3>',

  );
  
  $form['product_catalogs']['distribute'] = array(
    '#type' => 'checkbox',
    '#title' => t('Distribute'),
	'#suffix' => '</div>',
	'#prefix' => '<div class="distribute">',
  );
  
  $form['product_catalogs']['distribute_commission'] = array(
    '#type' => 'textfield',
    '#title' => t('COMMISSION'),
	'#attributes' => array(
		'class' => array('form-control'),
	),
	'#default_value' => isset($values['distribute_commission']) ? $values['distribute_commission'] : NULL,
	'#suffix' => '</div>',
  );
  
  $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  );
  
  $form['next'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Next')
  );
    
  return $form;
}

function product_location_form($form, &$form_state){
	$values = isset($form_state['multistep_values']['product_location']) ? $form_state['multistep_values']['product_location'] : array();

  $form['product_location'] = array(
    '#prefix' => '<div><h2>Location</h2>',
    '#suffix' => '</div>',
  );
  
	$form['product_location']['address'] = array(
		'#type' => 'textfield',
		'#title' => t('Search address'),
	'#attributes' => array(
		'class' => array('form-control'),
	),
		'#default_value' => isset($values['address']) ? $values['address'] : NULL,
	);	

	$form['product_location']['find'] = array(
		'#prefix' => '<a href="javascript:void(0)" style="color:#018fe2" class="find-address">Find',
		'#suffix' => '</a>',
	);

	$form['product_location']['map'] = array(
		'#prefix' => '<div id="mapCanvas"> 
					<div id="infoPanel">
						<div id="markerStatus"></div>
						<div id="info"></div>
					<div id="address"></div>',
		'#suffix' => '</div></div>',
	);	
	

	$form['product_location']['show_map'] = array(
		'#type' => 'checkbox',
		'#title' => t('Show map in confirmation emails'),
	);
  
	  $form['page'] = array(
		'#type' => 'hidden',
		'#default_value' => 'product_scheduling'
	  );
	$form['back'] = array(
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Back')
	);
  
	$form['next'] = array(
	
		'#type' => 'submit',
		'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
		'#value' => t('Next')
	);
    
	return $form;
}

function product_subscription_form($form, &$form_state){

  $eid = arg(3);
  $values = getProductSubscriptionData($eid);
  
/*   echo "<pre>";
  print_r($values); die; */
  
  $form['product_subscription']['subscription_text'] = array(
    '#prefix' => '<div><h2>Listing Subscription </h2>',
    '#suffix' => '</div>',
  );

/*  $form['product_subscription']['subscription_value'] = array(
    '#type' => 'radios',
  	'#attributes' => array(
		'class' => array('radio'),
	), 
    '#options' => array('FREE' => "Classic - Free", 'SILVER' => 'Silver - <span>$29/Month</span>','GOLD' => "Gold - $59/month"),
    '#default_value' => isset($values['value1']) ? $values['value1'] : NULL,
	'#required' => TRUE
  );*/
 
  $form['product_subscription']['free'] = array(
    '#type' => 'radio',
/*  	'#attributes' => array(
		'class' => array('radio'),
	), */
	'#prefix' =>'<div class="priceblock">',
	'#title' => 'Classic - Free',
	'#suffix' => '<h2>Totally Free</h2></div>',
    '#default_value' => isset($values['free']) ? $values['free'] : NULL,
	'#required' => TRUE
  ); 
  
  $form['product_subscription']['Silver'] = array(
    '#type' => 'radio',
/*  	'#attributes' => array(
		'class' => array('radio'),
	), */
	'#prefix' =>'<div class="priceblock">',
	'#title' => 'Silver',
    '#suffix' => '<h2>$29/Month</h2></div>',
    '#default_value' => isset($values['Silver']) ? $values['Silver'] : NULL,
	'#required' => TRUE
  ); 
  
  $form['product_subscription']['Gold'] = array(
    '#type' => 'radio',
/*  	'#attributes' => array(
		'class' => array('radio'),
	), */
	'#prefix' =>'<div class="priceblock">',
	'#title' => 'Gold',
    '#suffix' => '<h2>$59/Month</h2></div>',
    '#default_value' => isset($values['Gold']) ? $values['Gold'] : NULL,
	'#required' => TRUE
  ); 
  
  
  $form['metaID'] = array(
	'#type' => 'hidden',
	'#default_value' => isset($values['meta_id']) ? $values['meta_id'] : NULL,
  );
 
/*   $form['back'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Back')
  ); */
  
  $form['next'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Save')
  );
    
  return $form;
}

function product_scheduling_form($form, &$form_state){
  $values = isset($form_state['multistep_values']['product_scheduling']) ? $form_state['multistep_values']['product_scheduling'] : array();
 
  $form['product_scheduling'] = array(
    '#prefix' => '<div><h2>Scheduling</h2>',
    '#suffix' => '</div>',
  );
 
	$form['product_scheduling']['price-settings'] = array(
		'#type' => 'markup',
		'#markup' => '<h3>'.t('Dates Available').'</h3>',
/* 		'#prefix' => '<div class="quantity" id="session">', */
	);
	
  $form['product_scheduling']['dates_available'] = array(
    '#type' => 'select',
    '#title' => t('Dates available'),
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['dates_available']) ? $values['dates_available'] : NULL,
	'#options' => array('INVENTORY'=>'Fixed date & time','DATE_ENQUIRY'=>'Any date - Accept enquiries for any date','NO_DATE'=>'Date not required for booking'),
	'#required' => TRUE
  );
  
/*   $form['product_scheduling']['availability_type'] = array(
    '#type' => 'select',
	'#prefix' => '<div class="product-availability">',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#title' => t('Availability'),
    '#default_value' => isset($values['availability_type']) ? $values['availability_type'] : NULL,
	'#options' => array('FREE_SALE'=>'Unlimited - Free sale','SESSION_SEATS'=>'Limited - Fixed limit per session','RESOURCES'=>'Limited - By resources'),
  ); */
  
/*   $form['product_scheduling']['availability_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#title' => 'Limit',
    '#suffix' => '</div>',
    '#default_value' => isset($values['availability_value']) ? $values['availability_value'] : NULL,
  ); */
  
/*   $form['product_scheduling']['fixed_date'] = array(
    '#type' => 'textfield',
 	'#title' => t('Date'),
    '#default_value' => isset($values['fixed_date']) ? $values['fixed_date'] : NULL,
	  '#attributes' => array('placeholder'=>'Date',
		'class' => array('form-control','datepicker'),
	  ),
  ); */


  $form['product_scheduling']['fixed_time_from'] = array(
    '#type' => 'textfield',
 	'#title' => t('From'),
	'#prefix' => '<div id="product-scheduling" class="product-scheduling">',
    '#default_value' => isset($values['fixed_time_from']) ? $values['fixed_time_from'] : NULL,
	  '#attributes' => array('placeholder'=>'From',
		'class' => array('form-control','datepicker'),
	  ),
/*  	'#suffix' => '</div>'  */
  );
  
  $form['product_scheduling']['fixed_time_to'] = array(
    '#type' => 'textfield',
 	'#title' => t('To'),
/* 	'#prefix' => '<div class="session-from">', */
    '#default_value' => isset($values['fixed_time_to']) ? $values['fixed_time_to'] : NULL,
	  '#attributes' => array('placeholder'=>'To',
		'class' => array('form-control','datepicker'),
	  ),
/* 	'#suffix' => '</div>'  */
  );

   $form['product_scheduling']['season_label'] = array(
    '#type' => 'textfield',
	'#title' => t('Label'), 
    '#default_value' => isset($values['season_label']) ? $values['season_label'] : NULL,
	'#attributes' => array('placeholder'=>'Label','class' => array('form-control')),
  );
 
	$form['product_scheduling']['add_new_schedule'] = array(
		'#prefix' => '<div><a class="btn btn-dark btn-gradient form-submit" href="#" id="addSchedule">Add another schedule</a>',
		'#suffix' => '</div></div>',
	);
	
  $form['product_scheduling']['time_available_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#title' => t('Times available'),
    '#default_value' => isset($values['time_available_type']) ? $values['time_available_type'] : NULL,
	'#options' => array('FIXED'=>'Fixed times','TIME_ENQUIRY'=>'Any time - Allow customer to choose a time','NO_TIME'=>'Time not required for booking'),
  );
  
  $form['product_scheduling']['time_available_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array(
		'class' => array('form-control','timepicker'),
	),
	'#prefix' => '<div class="time-available" id="time-available">',
    '#title' => 'Available time',
    '#default_value' => isset($values['time_available_value']) ? $values['time_available_value'] : NULL,
  );

	$form['product_scheduling']['add_new1'] = array(
		'#prefix' => '<div><a class="btn btn-dark btn-gradient form-submit" href="#" id="addTime">Add another</a>',
		'#suffix' => '</div></div>',
	);
  
  $form['product_scheduling']['confirm_booking_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
	'#prefix' => '<div class="product-confirm-booking">',
    '#title' => t(' Confirm bookings'),
    '#default_value' => isset($values['confirm_booking_type']) ? $values['confirm_booking_type'] : NULL,
	'#options' => array('AUTOCONFIRM'=>'Automatically','MANUAL'=>'Manually'),
  );
  
  $form['product_scheduling']['confirm_booking_value'] = array(
    '#type' => 'textfield',
    '#title' => 'after',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#description' => 'Participants',
    '#suffix' => '</div>',
    '#default_value' => isset($values['confirm_booking_value']) ? $values['confirm_booking_value'] : NULL,
  );
  
  $form['product_scheduling']['duration_value'] = array(
    '#type' => 'textfield',
	'#attributes' => array('placeholder'=>'Minutes or Hours',
		'class' => array('form-control'),
	),
	'#prefix' => '<div class="product-estimate-duration">',
    '#title' => 'Estimated duration',
    '#default_value' => isset($values['duration_value']) ? $values['duration_value'] : NULL,
  );
  
  $form['product_scheduling']['duration_type'] = array(
    '#type' => 'select',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['duration_type']) ? $values['duration_type'] : NULL,
	'#suffix' => '</div>',
	'#options' => array('MINUTES'=>'Minutes','HOURS'=>'Hours','DAYS'=>'Days'),
  );
  
	$form['product_scheduling']['Sessions-settings'] = array(
		'#type' => 'markup',
		'#markup' => '<h3>'.t('Sessions settings').'</h3>',
		'#prefix' => '<div class="quantity" id="session-wrapper">',
	);
	$form['product_scheduling']['start-session-HTML-start'] = array(
		'#type' => 'markup',
		'#markup' => '<h4>'.t('From').'</h4>',
		'#prefix' => '<div id="start-session-wrapper">',
	);
  $form['product_scheduling']['session_start_from_date'] = array(
    '#prefix' => '<div class="session-from-to"><div class="session-from">',
	'#type' => 'textfield',
 	'#title' => t('Date'),
    '#default_value' => isset($values['session_start_from_date']) ? $values['session_start_from_date'] : NULL,
	  '#attributes' => array('placeholder'=>'From',
		'class' => array('form-control','datepicker'),
	  ),
		'#suffix' => '</div>'
  );
  
  $form['product_scheduling']['session_start_from_time'] = array(
    '#prefix' => '<div class="session-from">',
	'#type' => 'textfield',
  	'#title' => t('Time'),
    '#default_value' => isset($values['session_start_from_time']) ? $values['session_start_from_time'] : NULL,
	  '#attributes' => array('placeholder'=>'From',
		'class' => array('form-control','timepicker'),
	  ),
		'#suffix' => '</div>'
  ); 
	$form['product_scheduling']['start-session-HTML-start1'] = array(
		'#type' => 'markup',
		'#markup' => '<h4>'.t('To').'</h4>',
	);
  $form['product_scheduling']['session_start_to_time'] = array(
  '#prefix' => '<div class="session-from">',
    '#type' => 'textfield',
 	'#title' => t('Time'),
    '#default_value' => isset($values['session_start_to_time']) ? $values['session_start_to_time'] : NULL,
	  '#attributes' => array('placeholder'=>'To',
		'class' => array('form-control','timepicker'),
	  ),
 		'#suffix' => '</div>'
  ); 
  $form['product_scheduling']['session_start_to_date'] = array(
  '#prefix' => '<div class="session-from">',
    '#type' => 'textfield',
  	'#title' => t('Date'), 
    '#default_value' => isset($values['session_start_to_date']) ? $values['session_start_to_date'] : NULL,
	  '#attributes' => array('placeholder'=>'To',
		'class' => array('form-control','datepicker'),
	  ),
 		'#suffix' => '</div></div>'
  );
	
  $form['product_scheduling']['all_day_session'] = array(
    '#type' => 'radios',

    '#options' => array('all-day' => "All Day"),
    '#default_value' => isset($values['all_day_session']) ? $values['all_day_session'] : NULL,
	/* '#required' => TRUE */
  );
	$form['product_scheduling']['start-session-HTML-end'] = array(
		'#type' => 'markup',
		'#suffix' => '</div>',
	); 
  $form['product_scheduling']['repeat_session'] = array(
    '#type' => 'select',
    '#title' => 'Repeat sessions',
	'#attributes' => array(
		'class' => array('form-control'),
	),
    '#default_value' => isset($values['repeat_session']) ? $values['repeat_session'] : NULL,
	'#options' => array('DoNOt'=>'Do not repeat','Minute'=>'Repeat minute by minute','Hourly'=>'Repeat Hourly','Daily'=>'Repeat Daily','Weekly'=>'Repeat Weekly'),
  );
  
  $minutes = array();
  for($i=5;$i<95;$i=$i+5){
	$minutes[$i] = $i;
  }
	$form['product_scheduling']['repeat-session-HTML-start1'] = array(
		'#type' => 'markup',
		'#prefix' => '<div class="repeat-session-HTML">',
	); 
  $form['product_scheduling']['repeat_session_every_minutes'] = array(
    '#type' => 'select',
 	'#title' => t('Every'),
	'#options' => $minutes,
	'#description' => t('(minutes)'),
	'#prefix' => '<div class="repeat_session">',
    '#default_value' => isset($values['repeat_session_every_minutes']) ? $values['repeat_session_every_minutes'] : NULL,
	  '#attributes' => array('placeholder'=>'Minutes',
		'class' => array('form-control'),
	  ),
  );
 
  $hours = array();
  for($i=1;$i<25;$i=$i+1){
	$hours[$i] = $i;
  }
  
  $form['product_scheduling']['repeat_session_every_hours'] = array(
    '#type' => 'select',
    '#options' => $hours,
 	'#title' => t('Every'),
	'#description' => t('(hours)'),
/* 	'#prefix' => '<div class="repeat_session">', */
    '#default_value' => isset($values['repeat_session_every_hours']) ? $values['repeat_session_every_hours'] : NULL,
	  '#attributes' => array('placeholder'=>'Hours',
		'class' => array('form-control'),
	  ),
  );
 
  $days = array();
  for($i=1;$i<31;$i=$i+1){
	$days[$i] = $i;
  }
  
  $form['product_scheduling']['repeat_session_every_days'] = array(
    '#type' => 'select',
    '#options' => $days,
 	'#title' => t('Every'),
	'#description' => t('(days)'),
/* 	'#prefix' => '<div class="repeat_session">', */
    '#default_value' => isset($values['repeat_session_every_days']) ? $values['repeat_session_every_days'] : NULL,
	  '#attributes' => array('placeholder'=>'Days',
		'class' => array('form-control'),
	  ),
  );
  
  $form['product_scheduling']['repeat_session_until'] = array(
    '#type' => 'textfield',
 	'#title' => t('Until'),
    '#default_value' => isset($values['repeat_session_until']) ? $values['repeat_session_until'] : NULL,
	  '#attributes' => array('placeholder'=>'Date',
		'class' => array('form-control','datepicker'),
	  ),
 	'#suffix' => '</div>'
  );
	$form['product_scheduling']['repeat-session-HTML-end1'] = array(
		'#type' => 'markup',
		'#suffix' => '</div>',
	); 
 	$form['product_scheduling']['repeat-session-HTML-start'] = array(
		'#type' => 'markup',
		'#markup' => '<h4>'.t('On').'</h4>',
		'#prefix' => '<div id="repeat-session-wrapper">',
	);

	$weekdays = array('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday');
	foreach($weekdays as $key=>$value){
		$form['product_scheduling']['repeat_session_on_['.$value.']'] = array(
		'#type' => 'checkbox',
		'#prefix' => '<div class="rep-sessions">',
		'#title' => t($value),
		'#default_value' => isset($extraDetails['repeat_session_on_'.$value]) ? $extraDetails['repeat_session_on_'.$value] : NULL,

		);
	  
		$form['product_scheduling']['session_repeats_from_['.$value.']'] = array(
		'#type' => 'textfield',
		'#title' => t('From'),
		'#default_value' => isset($values['session_repeats_from_'.$value]) ? $values['session_repeats_from_'.$value] : NULL,
		  '#attributes' => array('placeholder'=>'From',
			'class' => array('form-control','timepicker'),
		  ),
		);
	  
		$form['product_scheduling']['session_repeats_to_['.$value.']'] = array(
		'#type' => 'textfield',
		'#title' => t('To'),
		'#suffix' => '</div>',
		'#default_value' => isset($values['session_repeats_to_'.$value]) ? $values['session_repeats_to_'.$value] : NULL,
		  '#attributes' => array('placeholder'=>'To',
			'class' => array('form-control','timepicker'),
		  ),
		);
	}

  	$form['product_scheduling']['repeat-session-HTML-end'] = array(
		'#type' => 'markup',
		'#suffix' => '</div>',
	);

/*    $form['product_scheduling']['repeat_session_weekly_on'] = array(
		'#type' => 'select',
		'#title' => t('On'),
		'#attributes' => array(
			'class' => array('form-control'),
		),
		'#default_value' => isset($extraDetails['repeat_session_weekly_on']) ? $extraDetails['repeat_session_weekly_on'] : NULL,
		'#options' => array('Monday'=>'Monday','Tuesday'=>'Tuesday','Wednesday'=>'Wednesday','Thursday'=>'Thursday','Friday'=>'Friday','Saturday'=>'Saturday','Sunday'=>'Sunday'),

	);  */
 
/* 	$form['product_scheduling']['add_new'] = array(
		'#prefix' => '<div><a class="btn btn-dark btn-gradient form-submit" href="#" id="addSession">Add another</a>',
		'#suffix' => '</div></div></div>',
	); */
	
/*   $form['product_scheduling']['product_color'] = array(
    '#type' => 'textfield',
    '#title' => 'Product Color',
    '#required' => TRUE,
	'#attributes' => array(
		'class' => array('form-control','colorpicker'),
	),
    '#default_value' => isset($values['product_color']) ? $values['product_color'] : NULL,
  ); */
 
  $form['page'] = array(
	'#type' => 'hidden',
	'#default_value' => 'product_pricing'
  );
/*   $form['back'] = array(
	'#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
	'#value' => t('Back')
  ); */
  
  $form['save'] = array(
    '#type' => 'submit',
	'#attributes' => array('class'=>array('btn btn-dark btn-gradient')),
    '#value' => t('Save')
  );
    
  return $form;
}

?>