<?php
module_load_include('inc', 'products', 'includes/add_product.navigation');
module_load_include('inc', 'products', 'includes/add_product.submit');
module_load_include('inc', 'products', 'includes/add_restaurant.submit');
function products_menu() {
  $items = array();
  $items['product/add/%'] = array(
    'title' => 'Add Product',
    'page callback' => 'product_add_form_1',
    'page arguments' => array('product_add_form'),
    'access arguments' => array('access container'),
    'file' => 'includes/product_add.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['product/add/images'] = array(
    'title' => 'Add Images',
    'page callback' => 'product_add_images',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['product/extra/edit/%/%'] = array(
    'title' => 'Update Extra',
    'page callback' => 'product_edit_extra',
    'page arguments' => array('product_add_form'),
    'access arguments' => array('access container'),
    'file' => 'includes/product_add.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['product/extra/delete/%/%'] = array(
/*     'title' => 'Add Images', */
    'page callback' => 'product_extra_delete',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['product/session/delete/%/%'] = array(
/*     'title' => 'Add Images', */
    'page callback' => 'product_session_delete',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  );

   $items['update_product_list/%/%/%/%/%/%/%'] = array(
    'page callback' => 'update_product_list_address', 
    'page arguments' => array(1,2,3,4,5,6,7),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  );
  $items['product/ajax/getProductDetail'] = array(
    'page callback' => 'getProductAddressData', 
    'access arguments' => TRUE,
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['product/ajax/getExperienceCategory'] = array(
    'page callback' => 'getExperienceCategoryData', 
    'access arguments' => TRUE,
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['product/subscription'] = array(
/*     'title' => 'Add Product', */
    'page callback' => 'product_subscription_status',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  );
 
   $items['add/restaurant/%'] = array(
    'title' => 'Add Restaurant',
    'page callback' => 'add_restaurant_form',
    'access arguments' => array('access container'),
    'file' => 'includes/add_restaurant.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
 
   $items['add/rentals/%'] = array(
    'title' => 'Add Vacation Rentals',
    'page callback' => 'add_rentals_form',
    'access arguments' => array('access container'),
    'file' => 'includes/add_rentals.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  
   $items['product/calendar'] = array(
    'title' => 'Add Calendar Events',
    'page callback' => 'add_calendar_events',
    'access arguments' => array('access container'),
    'file' => 'includes/product_add.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );

/*    $items['deal/types'] = array(
    'title' => 'Deal Types',
    'page callback' => 'product_deal_types',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  ); */
   $items['removePricing/%'] = array(
    'page callback' => 'remove_pricing', 
    'page arguments' => array(1),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  );
    $items['manage/listing'] = array(
    'title' => t('Manage Listing'),
    'page callback' => 'manage_product_list',
    'access arguments' => array('access container'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function product_add_images(){

	if (!empty($_FILES)) {
		$diretorio = $_REQUEST["diretorio"];
		//$filepath = 'public://products/'.$diretorio;
		$filepath = 'public://products';
		$fileName = time()."_".$_FILES["file"]["name"];
		if(move_uploaded_file($_FILES["file"]["tmp_name"],$_SERVER["DOCUMENT_ROOT"]."/sites/default/files/products/".$fileName)){
			$file = file_load($_SERVER["DOCUMENT_ROOT"]."/sites/default/files/products/".$fileName);
			$file->uid = $user->uid;
			$file->filename = $fileName;
			$file->uri = $filepath."/".$fileName;
			$file->status = FILE_STATUS_PERMANENT;
			$result = file_save($file);
			$fileId = $result->fid;
			
			$photoData["text"] = "";
			$photoData["fid"] = $fileId;
			$query=db_insert('gbl_listing_meta')
			  ->fields(array('listing_id'=>isset($_REQUEST["customValue"])?$_REQUEST["customValue"]:arg(3),
							'key1'=>"photo_data",
							'value1'=>serialize($photoData)
				));	 
			$result=$query->execute();
			
			echo $fileId;
			die();
		}
	}
	else if(isset($_REQUEST["action"]) && $_REQUEST["action"] == "add-text"){
		$photoData["text"] = $_POST["customText"];
		$photoData["fid"] = $_POST["fileID"];
		
		$query=db_select('gbl_listing_meta','lm')
				->fields('lm')
				->condition('listing_id',isset($_POST['listingID'])?$_POST['listingID']:arg(3))
				->execute();
		$check = 0;
		while($data=$query->fetchAssoc()){
			$value1 = unserialize($data["value1"]);
			if(in_array($photoData["fid"],$value1)){				
				$query=db_update('gbl_listing_meta')
				  ->fields(array('value1'=>serialize($photoData)))
				  ->condition('meta_id',$data["meta_id"]);
				$result=$query->execute();	
				echo $result;
				die();
			}
		}
		$query=db_insert('gbl_listing_meta')
		  ->fields(array('listing_id'=>isset($_POST['listingID'])?$_POST['listingID']:arg(3),
						'key1'=>"photo_data",
						'value1'=>serialize($photoData)
			));	 
		$result=$query->execute();	
		echo $result;
		die();
	}
	else if(isset($_REQUEST["action"]) && $_REQUEST["action"] == "delete-photo"){
		$photoData["fid"] = $_POST["fileID"];
		
		$query=db_select('gbl_listing_meta','lm')
				->fields('lm')
				->condition('listing_id',isset($_POST['listingID'])?$_POST['listingID']:arg(3))
				->execute();
		$check = 0;
		while($data=$query->fetchAssoc()){
			$value1 = unserialize($data["value1"]);
			if(in_array($photoData["fid"],$value1)){				
				$query=db_delete('gbl_listing_meta')
					->condition('meta_id',$data["meta_id"]);
				$result=$query->execute();

				$query=db_delete('file_managed')
					->condition('fid',$photoData["fid"]);
				$result=$query->execute();					
				
				echo $result;
				die();
			}
		}		
	}


}

 function findexts ($filename) 
 { 
	 $filename = strtolower($filename) ; 
	 $exts = split("[/\\.]", $filename) ; 
	 $n = count($exts)-1; 
	 $exts = $exts[$n]; 
	 return $exts; 
 }
 
 function products_theme() {
  $module_path = drupal_get_path('module', 'products');

   return array(
    'add_product' => array(
      'template' => 'add_product',
      'path' => $module_path.'/templates',
    ),
    'deal_types' => array(
      'template' => 'deal_types',
      'path' => $module_path.'/templates',
    ),
	'manage_listing' => array(
      'template' => 'manage_listing',
      'path' => $module_path.'/templates',
    ),
  );
}
function getExperienceType()
{
$type=array();
$query=db_select('gbl_experience_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['experience_type'];
}	   
return $type;
}

function getRentalsListingType()
{
$type=array();
$query=db_select('gbl_rentals_listing_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['listing_type'];
}	   
return $type;
}

function getPropertyType()
{
$type=array();
$query=db_select('gbl_rentals_property_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['property_type'];
}	   
return $type;
}

function getRentalsBedType()
{
$type=array();
$query=db_select('gbl_rentals_bed_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['bed_type'];
}	   
return $type;
}

function getRestaurantType()
{
$type=array();
$query=db_select('gbl_restaurant_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['restaurant_type'];
}	   
return $type;
}

function getCuisineType()
{
$type=array();
$query=db_select('gbl_cuisine_type','get')
       ->fields('get')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['id']]=$data['cuisine_type'];
}	   
return $type;
}

function getExperienceCategory()
{
$type=array();
$query=db_select('gbl_experience_category','gec')
       ->fields('gec')
	   ->condition('status',1)
	   ->execute();
while($data=$query->fetchAssoc())
{
$type[$data['cid']]=$data['category_name'];
}	   
return $type;
}
/*****************Get all amenties data for experience listing**************************************/
function getAmentiesdata($type=null)
{

$amentiestype=array();
$query=db_select('gbl_amenties_meta','gme')
       ->fields('gme')
	   ->condition('status','1','=');
	if($type!=null)
	{
	$query->condition('amenties_type',$type,'like');
	}	   
	$result=$query->execute();	
	while($data=$result->fetchAssoc())
	{	
	$amentiestype[]=$data;
	}	   
return $amentiestype;
}
function getAmentiesByproduct($productId)
{
$amenitiesdata=array();
$query=db_select('gbl_listing_meta','glm')
      ->fields('glm')
	  ->condition('key1','amenities','=')
	  ->condition('listing_id',$productId,'=')
	  ->execute();
 
return   $query->fetchAssoc();
}

function getOverviewData($eid=''){
$overviewdata=array();
$query=db_select('gbl_experience_list','el')
      ->fields('el')
	  ->condition('eid',$eid,'=')
	  ->execute();
return $query->fetchAssoc();
}

function getPhotosData($eid=''){
	$photosData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm',array('value1'))
		  ->condition('key1','photo_data','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
	while($data=$query->fetchAssoc())
   {
		$photosData[]=$data;
   } 
   return $photosData;
}

function getProductExtraData($eid=''){
	$extrasData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm',array('value1','meta_id','listing_id'))
		  ->condition('key1','product_extra','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
	while($data=$query->fetchAssoc())
   {
		$extrasData[]=$data;
   } 
   return $extrasData;	
}

function product_extra_delete(){
	$listingID = arg(3);
	$metaID = arg(4);

	$query = db_delete("gbl_listing_meta")
				->condition('meta_id',$metaID);
	$deleted = $query->execute();
	if($deleted){
		drupal_set_message("Product extra value deleted sucessfully.");
		drupal_goto("product/add/extra/".$listingID);		
	}
}

function product_session_delete(){
	$listingID = arg(3);
	$sessionID = arg(4);

	$query = db_delete("gbl_scheduling_sessions")
				->condition('id',$sessionID);
	$deleted = $query->execute();
	if($deleted){
		drupal_set_message("Schedule session value deleted sucessfully.");
		drupal_goto("product/add/scheduling/".$listingID);		
	}
}

function product_edit_extra(){
	$listingID = arg(3);
	$extras = getProductExtraData($listingID);
	$productForm = drupal_get_form("product_extra_form");
	return theme( 'add_product', array( 'productForm' => $productForm,'extras'=>$extras));
}

function getExtraDetails($metaID=''){
	$query = db_select("gbl_listing_meta","lm")
			->fields("lm")
			->condition('meta_id',$metaID)
			->execute();
	$data = $query->fetchAssoc();
	return $data;
}

/* function getSchedulingData($eid=''){
	$schedulingData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm')
		  ->condition('key1','product_scheduling_data','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
	while($data=$query->fetchAssoc())
   {
		$schedulingData[]=$data;
   } 
   return $schedulingData;
} */

/* function getPricingData($eid=''){
	$pricingData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm',array('value1','meta_id','listing_id'))
		  ->condition('key1','product_pricing%','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
   return $data=$query->fetchAssoc();		
} */

function getPricingData($eid=''){
	$pricingData=array();
	$query=db_select('gbl_pricing','p')
		  ->fields('p')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
	while($data=$query->fetchAssoc())
   {
		$pricingData[]=$data;
   } 
   return $pricingData;		
}

function getProductSubscriptionData($eid=''){
	$pricingData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm',array('value1','meta_id','listing_id'))
		  ->condition('key1','product_subscription_data','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
/* 	while($data=$query->fetchAssoc())
   {
		$pricingData[]=$data;
   }  */
   return $data=$query->fetchAssoc();		
}

function getRulesDetails($eid=''){
	$rulesData=array();
	$query=db_select('gbl_listing_meta','lm')
		  ->fields('lm',array('value1','meta_id','listing_id'))
		  ->condition('key1','product_cancellation_data','like')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
/* 	while($data=$query->fetchAssoc())
   {
		$pricingData[]=$data;
   }  */
   return $data=$query->fetchAssoc();	
}
/**********Get amenities data by productId************************************/
/* function getAmentiesByproduct($productId=null)
{
	$amenitiesdata=array();
	$query=db_select('gbl_listing_meta','glm')
		  ->fields('glm')
		  ->condition('key1','amenities','=')
		  ->condition('listing_id',$productId,'=')
		  ->execute();
		while($data=$query->fetchAssoc())
	   {
	   $amenitiesdata[]=$data;
	   } 
	return    $amenitiesdata;
} */
/***********************************************/
function update_product_list_address($productId=null,$address1=null,$address2=null,$city=null,$state=null,$zipcode=null,$country=null,$latitude=null,$longitude=null)
{
  $query=db_update('gbl_experience_list')
	        ->fields(array('address1'=>$address1,'address2'=>$address2,'city'=>$city,'state'=>$state,'zipcode'=>$zipcode,'country'=>$country,'latitude'=>$latitude,'longitude'=>$longitude))
			->condition('eid',$productId,'=')
			->execute(); 
return true;
}
/***************************************************/
function getCountryList()
{
$country=array();
$query=db_select('gbl_country_list','gcl')
       ->fields('gcl',array('country_name'))
	   ->condition('activate','1','=')
	   ->execute();
	   while($data=$query->fetchAssoc())
	   {
	   $country[$data['country_name']]=$data['country_name'];
	   }
	   return $country;
}
function getListingData($productId=null)
{
$product=array();
$query=db_select('gbl_experience_list','gel')
	      ->fields('gel')
		  ->condition('eid',$productId,'=')
		  ->execute();
while($data=$query->fetchAssoc())
{
$product=$data;
}
return $product;		  
}
/*******************get address details for google maps*****************************************/
function getProductAddressData($productId=null)
{
$productId=$_GET["productId"];
$result=array();
$query=db_select('gbl_experience_list','gel')
       ->fields('gel')
	   ->condition('eid',$productId,'=')
	   ->execute();
$result=$query->fetchAssoc();
drupal_json_output($result);
exit();  
}
/***************************************************/
function getproductCategoryByType($typeId=null)
{
$cat=array();
$query=db_select('gbl_experience_category','gec')
       ->fields('gec')
	   ->condition('tid',$typeId,'=')
	   ->execute();

while($data=$query->fetchAssoc())
{
$cat[$data['cid']]=$data['category_name'];
}
return $cat;
}
function getExperienceCategoryData($typeId=null)
{
	if(!isset($_GET["action"])){
		$string="";
		$typeId=$_GET["typeId"];
		$data=getproductCategoryByType($typeId);
		if($data)
		{
			echo drupal_json_output($data);
		}

		else
		{
			echo 0;
		}
		exit();
	}
	else{
		$string='<select class="select" id="edit-product-category"><option value="">Select category</option>';
		$typeId=$_GET["typeId"];
		$data=getproductCategoryByType($typeId);
		if($data)
		{
			foreach($data as $key=>$value){
				$string .= '<option value="'.$key.'">'.$value.'</option>';
			}
			echo $string.'<select><script> 
			   jQuery(".select").selectBoxIt({
			   showFirstOption: false,
			  });	</script>';
		}

		else
		{
			$string .= '<option value="">No category found</option>';
			echo $string.'<select><script> 
			   jQuery(".select").selectBoxIt({
			   showFirstOption: false,
			  });	</script>';
		}
		exit();  
	}
}  
function getExperienceCategoryDataById($catId=null)
{
$query=db_select('gbl_experience_category','gec')
       ->fields('gec')
	   ->condition('cid',$catId,'=')
	   ->execute();
	 $result=$query->fetchAssoc();
return $result;	 
}

function product_subscription_status(){
	echo "<pre>";
	print_r($_REQUEST); die;
}

function product_deal_types(){
	return theme( 'deal_types');
}

function getLanguagesList(){
	$lan=array();
	$query=db_select('gbl_languages','la')
		   ->fields('la')
		   ->execute();

	while($data=$query->fetchAssoc())
	{
	$lan[$data['id']]=$data['language'];
	}
	return $lan;	
}
function remove_pricing($pricingId=null)
{

$query=db_delete('gbl_pricing')
       ->condition('id',$pricingId,'=')
	   ->execute();
return true;	   
}
function getSchedulingData($listingId=null)
{
$query=db_select('gbl_scheduling','gs')
       ->fields('gs')
	   ->condition('listing_id',$listingId,'=')
	   ->execute();
return $query->fetchAssoc();	   
      
}
function getSchedulingSessionData($listingId=null)
{
$query=db_select('gbl_scheduling_sessions','gs')
       ->fields('gs')
	   ->condition('listing_id',$listingId,'=')
	   ->execute();
return $query->fetchAssoc();	         
}

function getScheduleSessionData($listingID){
	$data = array();
	$query = db_select('gbl_scheduling', 'sch');
	$query->join('gbl_scheduling_sessions', 'se', 'sch.id = se.scheduleID');
	$query->fields('sch',array('id'))
	->fields('se',array('id','listing_id','startDate','startTime','endDate','endTime','repeatPeriodBy','repeatEvery','pricingData','endRepeatDate','reapeatDaysTime','scheduleID','defaultQuantity','is_all_day'))
	->condition('sch.listing_id',$listingID);
	$result = $query->execute();

	while($record = $result->fetchAssoc()) {
		$data[] = $record;
	}	
	return $data;
}
function getDiscountInfo($listId=null,$offerType=null)
{
$query=db_select('gbl_offers_and_discount','gbl')
       ->fields('gbl')
	   ->condition('listing_id',$listId,'=')
	   ->condition('offer_type',"%$offerType%",'like')
	   ->execute();
return $query->fetchAssoc();	   
}
function getListExtraPrice($listId=null,$priceId=null)
{
$result=array();
$query=db_select('gbl_special_price','gcp')
       ->fields('gcp');
	if($priceId!=null)
	{
	$query->condition('sid',$priceId,'=');
	}
	$query->condition('listing_id',$listId,'=');
	 $result1=$query->execute();
while($data=$result1->fetchAssoc())
{

$result[]=$data;
}	   
return $result;   
}

function getDiscountData($eid){
	$discounData=array();
	$query=db_select('gbl_offers_and_discount','d')
		  ->fields('d')
		  ->condition('listing_id',$eid,'=')
		  ->execute();
	while($data=$query->fetchAssoc())
   {
		$discounData[]=$data;
   } 
   return $discounData;	
}
function manage_product_list()
{

$title =$type ="";
if(isset($_GET['title']) && $_GET['title'] != ""){
		$title = $_GET['title'];
	}
	
$listing=manage_listing_data($title);
/* echo "<pre>";
print_r($listing);
die; */
return theme('manage_listing',array('listings'=>$listing))	;
}
/*****************************Manage Listing*******************************************************************************************/
function manage_listing_data($title=null,$type=null)
{
global $user;
$listing=array();
$query=db_select('gbl_experience_list','gel')
      ->fields('gel',array('eid','uid','title','short_description','visibility_status'))
	  ->condition('uid',$user->uid,'=');
	if($title !="")
	{
	$query->condition(db_or()->condition('title',"%$title%",'like')->condition('short_description',"%$title%",'like'));
  	}
	
$query->orderBy('created','DESC');
$result=$query->execute();

while($data=$result->fetchAssoc())
{
$listing[]=$data;
}

return $listing;  	  
}
function getListingMetaData($listingId=null)
{
$metaData=array();
$query=db_select('gbl_listing_meta','glm')
      ->fields('glm',array('key1','value1'))
	  ->condition('listing_id',$listingId,'=')
      ->execute();
while($data=$query->fetchAssoc())
{
$metaData[]=$data;
} 	  
return $metaData;

}
function search_listing_form($form,&$form_state)
{
$form=array();
$form['#method'] = 'get';
$form['search-class']=array(
'#prefix'=>'<div class="listing-search">'
);
$form['title'] = array(
/* '#title' => t('Search'), */
'#type' => 'textfield',
/* '#value'=> 'Search', */
'#size' => '30',
'#default_value'=>isset($_GET['title'])?$_GET['title']:'',
'#attributes' => array('placeholder'=>'Search Listing'),
);
$form['type'] = array(
'#title' => t('List Type'),
'#type' => 'select',
'#options'=>array(''=>'All','experience'=>'Experience listing','vacation'=>'Vacation Rental','hotel'=>'Hotels'),
'#default_value'=>isset($_GET['type'])?$_GET['type']:'',
'#attributes' => array('onchange' => 'this.form.submit();','class' => array('form-control')),
);
$form['submit'] = array(
'#type' => 'submit',
'#value' => t('Search'),
'#suffix'=>'</div>'
);
return $form;
}


function getExperienceListingTypeById($id=""){
$type=array();
$query=db_select('gbl_experience_type','gec')
       ->fields('gec')
	   ->condition('id',$id)
	   ->execute();
return $query->fetchAssoc();
}