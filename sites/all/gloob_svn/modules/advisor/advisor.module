<?php
function advisor_menu()
{
$items['gloobers/finder']=array(
    'title' => 'Gloobers Finder',
	'page callback' => 'advisors_list',
	'access arguments' => array('access container'),
	'access callback' => true, 
	'type' => MENU_NORMAL_ITEM,
	);
	$items['advice/user']=array(
   // 'title' => 'Advisors',
	'page callback' => 'advice_users',
    'access arguments' => array('access content'), 
	 'page_arguments' => array(2),
	'access callback' => true, 
	//'access callback' => 'user_is_logged_in',
	  'type' => MENU_CALLBACK,
	);
	$items['advice/request/received']=array(
   // 'title' => 'Advisors',
	'page callback' => 'show_Advice_Request_Receieved',
    'access arguments' => array('access content'), 
	'access callback' => true, 
	//'access callback' => 'user_is_logged_in',
	  'type' => MENU_CALLBACK,
	);
	$items['create/advice/list']=array(
   // 'title' => 'Advisors',
	'page callback' => 'advisor_create_list',
    'access arguments' => array('access content'), 
	'access callback' => true, 
	//'access callback' => 'user_is_logged_in',
	  'type' => MENU_CALLBACK,
	);
	/* $items['advice/ajax/userBychoice']=array(
   	'page callback' => 'advice_users_byChoice',
    'access arguments' => array('access content'), 
	 'page_arguments' => array(2),
	'access callback' => true, 
	//'access callback' => 'user_is_logged_in',
	  'type' => MENU_CALLBACK,
	); */
   return $items;
}

function advisors_list()
{
	
$perPageResult=6;
global $user;
if(!$user->uid)
{
	drupal_goto('login');
}
$paginateArray=$adviceSearch=$countriesArray=$advisors=$passionAdvisors=$pastTripAdvisors=array();
$advisorValue=$city = $state_short = $country = $address = $state_long = $output='';
/* echo "<pre>";
print_r($_SESSION);
die;
 */
// on search form submit
	if(isset($_POST['op']) && $_POST['op'] =='Request')
	{
           if(isset($_SESSION['advisor_search']) && $_SESSION['advisor_search']!="")
		   {
			   $_SESSION['advisor_search']="";
			  // unset($_SESSION['advisor_search']);
           }
		   if(isset($_SESSION['location_info']))
		   {
			   unset($_SESSION['location_info']);			   
		   }
		   if(isset($_SESSION['country_info']))
		   {
			   unset($_SESSION['country_info']);			   
		   }
		   
		   $advisorSearch=$_SESSION['advisor_search']=$_POST;
		 $location=trim($advisorSearch['location']);
		$addr=urlencode(trim($location));
		$geocode=file_get_contents('http://maps.google.com/maps/api/geocode/json?address='.$addr.'&sensor=false');
		$output= json_decode($geocode);		
	}	
		if($output!="")
		{			
		/**********Save search result in db gbl_advice_location_request,on the basis of generated id, send request*************/
				if($location)
				{
				$query=db_insert('gbl_advice_location_request')
					   ->fields(array('destination'=>$location,'traveller_uid'=>$user->uid,'created'=>time()));
				$result=$query->execute();
					if($result)
					{
					$_SESSION['advisor_location_search']=$result;
					}	   
				}	 
		/*******************************************************************************************************/
			
			if($output->status == 'OK'){
			foreach($output->results[0]->address_components as $addressC){
						if($addressC->types[0] == "administrative_area_level_2"){
							$city = $addressC->long_name;
							$adviceSearch['city'] = $city;
						}
						else if($addressC->types[0] == "administrative_area_level_1"){
							$state_short = $addressC->short_name;
							$state_long = $addressC->long_name;
							$adviceSearch['state_short'] = $state_short;
							$adviceSearch['state_long'] = $state_long;
						}
						else if($addressC->types[0] == "country"){
							$country_long = $addressC->long_name;
							$country_short = $addressC->short_name;
							$adviceSearch['country_long'] = $country_long;
							$adviceSearch['country_short'] = $country_short;
						}
						else if($addressC->types[0] == "sublocality_level_1"){
							$address = $addressC->long_name;
							$adviceSearch['address'] = $address;
						}
						 else if($addressC->types[0] == "continent"){
							$query=db_select('gbl_country_list','cl')
								   ->fields('cl',array('country_name'))
								   ->condition('continent',$addressC->long_name,'=');
							$result=$query->execute();	   
							while($res=$result->fetchAssoc())
							{
								$countriesArray[]=$res['country_name'];
							}
							$adviceSearch['continent'] = $addressC->long_name;
						}	 
					}
				}
		}
	
if($adviceSearch)
{
$_SESSION['location_info']=$adviceSearch;
}
if($countriesArray)
{
$_SESSION['country_info']=$countriesArray;
}

/*****************If filter applied for search***************************************************************************/
	if(isset($_POST['advisors']) && $_POST['advisors']!="")
		{	
		$_SESSION['advisors']=$_POST['advisors'];
		$advisorsOptions=json_decode($_SESSION['advisors'],true);
		  if (in_array("passion", $advisorsOptions))
			  {
			  $passionAdvisors=getAdvisorsByPassion();	
			  }
			 if(in_array("native", $advisorsOptions))
			{
			   $advisors=getAdvisors($_SESSION['location_info'],$_SESSION['country_info']);//get Advisors by native place	   
			}
			 if(in_array("past",$advisorsOptions))
			{
			   $pastTripAdvisors=getAdvisorsByPastTrips($_SESSION['location_info'],$_SESSION['country_info']);	 
			}
		$mergedArray=array_merge_recursive($advisors, $passionAdvisors, $pastTripAdvisors);
		$paginateResult=PaginateArray($mergedArray,1,$perPageResult);
		$returnArray=json_encode($paginateResult);
		echo $returnArray;
		die;
		}
	
/****************************************************************************************************************/
else
{
$advisors=getAdvisors($_SESSION['location_info'],$_SESSION['country_info']);//get Advisors by native place
$passionAdvisors=getAdvisorsByPassion();
$pastTripAdvisors=getAdvisorsByPastTrips($_SESSION['location_info'],$_SESSION['country_info']);
$mergedArray=array_merge_recursive($advisors, $passionAdvisors, $pastTripAdvisors);
}

/* echo "<pre>";
print_r($mergedArray);
die; */
/*******************************get result with ajax on scroll****************************************************************/
	if(isset($_POST['resultSet']) && $_POST['resultSet']!="" && $_POST['resultSet']>0)
	{
	$paginateResult=PaginateArray($mergedArray,$_POST['resultSet']+1,$perPageResult);
	$returnArray=json_encode($paginateResult);
	echo $returnArray;
	die;	
	}
	else
	{
//remove same uid results		
$tmpArr = array();
foreach($mergedArray as $k => $results)
{
	if( in_array( $results['uid'], $tmpArr )){			
			unset( $mergedArray[$k] );
		}
		$tmpArr[]		=	$results['uid'];
}
reset($mergedArray);
/* echo "<pre>";
print_r($mergedArray);
die; */ 
	$paginateArray=PaginateArray($mergedArray,1,$perPageResult);
	}
/* echo "<pre>";
print_r($paginateArray);
die; */	
return theme('advisors_list',array('mergedArray'=>$paginateArray));
}
/*******************************************************************/
function getAdvisors($country=null,$countriesArray=null)
{
global $user;
$users=array();
$query=db_select('gbl_users_meta','gum');
$query->fields('gum',array('name','uid','mail','first_name','last_name'));
if($country!="")
{
  if((isset($country['state_short']) && $country['state_short']!="") || (isset($country['state_long']) && $country['state_long']!=""))
  {
  $query->condition(db_or()->condition('gum.state',$country['state_short'],'like')->condition('gum.state',$country['state_long'],'like'));
  }
  if((isset($country['country_long']) && $country['country_long']!="") || (isset($country['country_short']) && $country['country_short']!=""))
  {
    $query->condition(db_or()->condition('gum.country',$country['country_short'],'like')->condition('gum.country',$country['country_long'],'like'));
  }
  if(isset($country['city']) && $country['city']!="")
  {
    $query->condition('gum.city',$country['city'],'like');
  }
}
//join who has received request
$query->condition('uid',$user->uid,'!=');
$result=$query->execute();
while($data=$result->fetchAssoc())
{
$users[]=$data;
} 
return $users;
}
//get advisors whose passions match with user
function getAdvisorsByPassion()
{
global $user;
$passions=array();
$result=db_query("Select C.uid , count(*) as countPassion from (SELECT gbl2.uid as uid, gbl2.pid as passionId FROM `gbl_users_passions` gbl1 LEFT JOIN `gbl_users_passions` gbl2 ON gbl1.pid = gbl2.pid WHERE gbl1.uid = :uid AND gbl2.uid != :uid) as C group by  C.uid order by countPassion DESC",array(':uid'=>$user->uid));
while($data=$result->fetchAssoc())
{
$passions[]=$data;
}
return $passions;
//SELECT DISTINCT(gbl2.uid) FROM `gbl_users_passions` gbl1 LEFT JOIN `gbl_users_passions` gbl2 ON gbl1.pid = gbl2.pid WHERE gbl1.uid = 1 AND gbl2.uid != 1
//Select C.userId , count(*) as countPassion from (SELECT b.uid as userId, b.pid as passionId FROM `gbl_users_passions` b WHERE  pid in (select a.pid from gbl_users_passions a where a.pid=b.pid and a.uid!= b.uid) and b.uid !=1) as C group by  C.userId order by countPassion DESC
//$result=$query->execute();
/* while($data=$result->fetchAssoc())
{
$passions[]=$data;
}
return $passions; */
}
function getAdvisorsByPastTrips($country=null,$countriesArray=null)
{
$advisors=array();
$query=db_select('gbl_experience_list','gbl');
$query->join('gbl_booking','gb','gbl.eid=gb.lid');
//$query->leftJoin('gbl_advisor_request','gar','gar.advisor_uid=gb.uid');
$query->fields('gbl',array('title','list_type','city','state','zipcode','country','address1','address2','short_description'));
$query->fields('gb',array('uid','created','arrive_at_date'));
$query ->where("gb.arrive_at_date < now()");
$query->condition(db_or()->condition('gb.booking_status','refund_request','!=')->condition('gb.booking_status','refunded','!='));
if($country!="")
{
  if((isset($country['state_short']) && $country['state_short']!="") || (isset($country['state_long']) && $country['state_long']!=""))
  {
  $query->condition(db_or()->condition('gbl.state',$country['state_short'],'like')->condition('gbl.state',$country['state_long'],'like'));
  }
  if((isset($country['country_long']) && $country['country_long']!="") || (isset($country['country_short']) && $country['country_short']!=""))
  {
    $query->condition(db_or()->condition('gbl.country',$country['country_short'],'like')->condition('gbl.country',$country['country_long'],'like'));
  }
  if(isset($country['city']) && $country['city']!="")
  {
    $query->condition('gbl.city',$country['city'],'like');
  }
  if(isset($country['continent']) && $country['continent']!="")
  {
    $query->condition('gbl.country',$countriesArray,'in');
  }

}
$query->groupBy('gb.uid');
$query->orderBy('gb.created','DESC');
$result=$query->execute();
while($data=$result->fetchAssoc())
{
$advisors[]=$data;
}
return $advisors;
}

function advisor_theme() {
  $module_path = drupal_get_path('module', 'advisor');  
  return array(
    'advisors_list' => array(
      'template' => 'advisors_list',
      'path' => $module_path.'/templates',
    ),
	'advice_request_receive' => array(
      'template' => 'advice_request_receive',
      'path' => $module_path.'/templates',
    ),
	 );
  }
function advice_users()
  {
  global $user;
  //drupal_session_start();
  //$advisorSearch=unserialize(_drupal_session_read('advisor_search'));
  $advisorSearch=$_SESSION['advisor_search'];
  //$requestId=_drupal_session_read('advisor_location_search');
  $requestId=$_SESSION['advisor_location_search'];
  $location=trim($advisorSearch['location']);
  $uid=trim($_POST['typeId']);//to whom request is send
  $msg=trim($_POST['msg']);
  $advisorDetails=user_load($uid);
  $senderDetails=user_load($user->uid);   
  //$advisorStatus=check_advice_status($user->uid,$uid,$location);
	 	   /* if(empty($advisorStatus))
		  {  */ 	  
			  $query=db_insert('gbl_advisor_request')
					 ->fields(array('rid'=>$requestId,'advisor_uid'=>$uid,'message'=>($msg)?$msg:'','created'=>time()));
			   $result=$query->execute();
		  //}
          /*else
           {
		   $query=db_update('gbl_advisor_request')
		          ->fields(array('modified'=>time()))
				  ->condition('aid',$advisorStatus['aid']);
            $result=$query->execute();	   
           } 	*/	   
			   if($result)
			   {
			   //mail send
			   /****************************************************************/
			$title	=	'Hello '.$advisorDetails->name.'<br/>';
            $body			='<p>'.$senderDetails->name.' needs your advise for location '.$location.' Kindly Share your experience with '.$senderDetails->name.' and earn credits for sharing your experience on gloobers.For more details LogIn to Gloobers</p>'	;		
			$module			=	'advisor';
			$key			=	'get_advice_from_advisor';
			$to_email 		= 	$advisorDetails->mail;
			$subject		=	'Advice for location '.$location;		
			sendNotificationEmail($module,$key,$to_email,$subject,$title,$body);
			   /****************************************************************/
			   //notifications send
			$notification_msg=$senderDetails->name.' needs your advise for location '.$location;
			   $query=db_insert('gbl_notifications')
			          ->fields(array('sender_id'=>$user->uid,'recipient_id'=>$uid,'noti_msg'=>$notification_msg,'notification_time'=>time()))
                      ->execute(); 					  
	/*******************************************************************************/
			   echo "1";
			   die;
			   }
		  // }
		   else
		   {
		   echo  "0";
		   die;
		   }
       	   
	 // }
  }
function check_advice_status($requestId=null,$advisorId=null)
{
 $query=db_select('gbl_advisor_request','gar');
 $query->join('gbl_advice_location_request','gal','gal.rid=gar.rid');
 $query->fields('gar');
 $query->fields('gal');
 $query->condition('gar.rid',$requestId);
 $query->condition('gar.advisor_uid',$advisorId);
 $result=$query->execute(); 
 return $result->fetchAssoc(); 	   
}  

/**********************Get pagination using arrays**********************************/
function PaginateArray($input, $page, $show_per_page){
$outArray=array();
  $page = $page < 1 ? 1 : $page;
  $start = ($page - 1) * ($show_per_page);
  $offset = $show_per_page;
  $outArray = array_slice($input, $start, $offset);
  return $outArray;
 }
function getCommonPassions($senderId=null,$receiverId=null)
{
$passions=array();
$query=db_select('gbl_users_passions','gup1');
$query->leftJoin('gbl_users_passions','gup2','gup1.pid=gup2.pid');
$query->join('gbl_passions','gp','gp.pid=gup2.pid');
$query->fields('gup2',array('pid'));
$query->fields('gp');
$query->condition('gup1.uid',$senderId,'=');
//$query->condition('gup1.uid',$receiverId,'!=');
$query->condition('gup2.uid',$receiverId,'=');
//$query->condition('gup2.uid',$senderId,'!=');
$result=$query->execute();
while($data=$result->fetchAssoc())
{
$passions[]=$data;
}
return $passions;
}

/*******************When user select filters in advisor search **************************************/
/* function advice_users_byChoice()
{
if($_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest') {
$adviceSearch=$countriesArray=$mergedArray=$advisors=$passionAdvisors=$pastTripAdvisors=array();
$city = $state_short = $country = $address = $state_long = $output='';
$adviceOption=trim($_POST['advisors']);
$advisorsOptions=json_decode($adviceOption,true);
 drupal_session_start();
_drupal_session_read('advisor_search');
$advisorSearch=unserialize(_drupal_session_read('advisor_search'));
$location=trim($advisorSearch['location']);	
$addr=urlencode(trim($location));
$geocode=file_get_contents('http://maps.google.com/maps/api/geocode/json?address='.$addr.'&sensor=false');
$output= json_decode($geocode);
	if($output!="")
	{
	if($output->status == 'OK'){
	foreach($output->results[0]->address_components as $addressC){
				if($addressC->types[0] == "administrative_area_level_2"){
					$city = $addressC->long_name;
					$adviceSearch['city'] = $city;
				}
				else if($addressC->types[0] == "administrative_area_level_1"){
					$state_short = $addressC->short_name;
					$state_long = $addressC->long_name;
					$adviceSearch['state_short'] = $state_short;
					$adviceSearch['state_long'] = $state_long;
				}
				else if($addressC->types[0] == "country"){
					$country_long = $addressC->long_name;
					$country_short = $addressC->short_name;
					$adviceSearch['country_long'] = $country_long;
					$adviceSearch['country_short'] = $country_short;
				}
				else if($addressC->types[0] == "sublocality_level_1"){
					$address = $addressC->long_name;
					$adviceSearch['address'] = $address;
				}
				 else if($addressC->types[0] == "continent"){
					$query=db_select('gbl_country_list','cl')
						   ->fields('cl',array('country_name'))
						   ->condition('continent',$addressC->long_name,'=');
					$result=$query->execute();	   
					while($res=$result->fetchAssoc())
					{
						$countriesArray[]=$res['country_name'];
					}
					$adviceSearch['continent'] = $addressC->long_name;
				}	 
			}
		}
	}

	if (in_array("passion", $advisorsOptions))
	  {
	  $passionAdvisors=getAdvisorsByPassion();	
	  }
	 if(in_array("native", $advisorsOptions))
	{
	   $advisors=getAdvisors($adviceSearch,$countriesArray);//get Advisors by native place	   
	}
	 if(in_array("past",$advisorsOptions))
	{
	   $pastTripAdvisors=getAdvisorsByPastTrips($adviceSearch,$countriesArray);	 
	}
$mergedArray=array_merge_recursive($advisors, $passionAdvisors, $pastTripAdvisors);
$returnArray=json_encode($mergedArray);
echo $returnArray;
die;
}
} */
/************************************************************************/
function get_advice_message_form($form,$form_state)
{
	$form = array();
	 $form['requestId'] = array(
	'#type' => 'hidden',
	'#size' => '30',
	'#attributes' => array('class' => 'requestId'), 
	);
	$form['msg'] = array(
	'#title' => t('Message to advisor'),
	'#type' => 'textarea',
	'#size' => '30',
	  );
	 $form['submit'] = array(
	'#type' => 'submit',
	'#value' => t('Send Request'),
	'#attributes' => array('class' => array('send-request-msg')), 
	); 
	return $form;
}
/**************************Show all requests received by advisor****************************************/
function show_Advice_Request_Receieved()
{
global $user;
$adviceRequests=getAdviceRequestReceived($user->uid);
return theme('advice_request_receive',array('requests'=>$adviceRequests));
}
//get all requests received by travellors
function getAdviceRequestReceived($userId=null)
{
$requests=array();
$query=db_select('gbl_advice_location_request','gal');
$query->join('gbl_advisor_request','gar','gal.rid=gar.rid');
//join to request list received with message box
$query->fields('gal');
$query->fields('gar',array('rid','advisor_uid','message'));
$query->condition('gar.status',1);
$query->condition('advisor_uid',$userId);
$result=$query->execute();
	while($data=$result->fetchAssoc())
	{
		$requests[]=$data;
	}
	return $requests;
}
//get all requests send  by travellor to advisors
function getAdviceRequestSend($userId=null)
{
$requests=array();
$query=db_select('gbl_advice_location_request','gal');
$query->join('gbl_advisor_request','gar','gal.rid=gar.rid');
//join to request list received with message box
$query->fields('gal');
$query->fields('gar');
$query->condition('gar.status',1);
$query->condition('traveller_uid',$userId);
$result=$query->execute();
	while($data=$result->fetchAssoc())
	{
		$requests[]=$data;
	}
	return $requests;
}
/**********************Advisor Form************************/
function gloobers_finder_form($form,&$form_state)
{
$form=array();
$form['location'] = array(
'#title' => t('Location'),
'#type' => 'textfield',
'#default_value'=>($_SESSION['advisor_search']['location'])?$_SESSION['advisor_search']['location']:'',
'#attributes' => array('class' => array('form-control')),
);
$form['trip_type'] = array(
'#title' => t('Type of trip'),
'#type' => 'select',
'#options'=>array('family-trip'=>'Family Trip','business-trip'=>'Business Trip','group-trip'=>'Group Trip','romantic-trip'=>'Romantic Trip','lone-exploration'=>'Lone Exploration'),
//'#default_value'=>isset($_GET['type'])?$_GET['type']:'',
'#attributes' => array('class' => array('form-control')),
);
// select from  to date
$form['select_date_from'] = array(
'#title' => t('Select Date'),
'#prefix'=>'<div class="date-select">',
'#type' => 'textfield',
//'#default_value'=>isset($_GET['type'])?$_GET['type']:'',
'#attributes' => array('class' => array('form-control','datepicker')),
);
$form['select_date_to'] = array(
//'#title' => t('Select Date'),
'#suffix'=>'</div>',
'#type' => 'textfield',
//'#default_value'=>isset($_GET['type'])?$_GET['type']:'',
'#attributes' => array('class' => array('form-control','datepicker')),
); 
// no of travellers
// select Councellor
$form['submit'] = array(
'#type' => 'submit',
'#value' => t('Request'),
);
return $form;
}
/******create a list of listings for advice on the basis of request Id -> option on view request page********************/
function advisor_create_list()
{
	//search form with destination,list_type,date filter
	
	
}