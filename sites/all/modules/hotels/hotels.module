<?php

global $user, $base_url;


module_load_include('inc', 'hotels', 'includes/add_hotel.submit');
function hotels_menu()
{

    $items = array();


    $items['hotel/add/%'] = array(
        'title' => 'Add Hotel',
        'page callback' => 'hotel_add_form_1',
        'page arguments' => array('hotel_add_form'),
        'access callback' => TRUE,
        'access arguments' => array('access container'),
        'file' => 'includes/hotel_add.form.inc',
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/hotelPics"] = array(
        'page callback' => 'savehotelroom_pics',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/deleteServices"] = array(
        'page callback' => 'delete_service_options',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/getAmenities"] = array(
        'page callback' => 'get_room_safety_amenities',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/editroom"] = array(
        'page callback' => 'get_room_detail_by_hotel_id',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/hotel_recent_pic"] = array(
        'page callback' => 'get_hotel_recent_pic',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/room_recent_pic"] = array(
        'page callback' => 'get_rooms_recent_pic',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/hotel_board_type"] = array(
        'page callback' => 'get_hotel_boardtype',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/hotel_seasonnalprice"] = array(
        'page callback' => 'get_hotel_seasonnal_price',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/hotel_detail"] = array(
        'page callback' => 'hotel_detail_view',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/gethotel_detail"] = array(
        'page callback' => 'gethotel_detail',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/add_location"] = array(
        'page callback' => 'add_hotel_location',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items["hotel/ajax/add_location1"] = array(
        'page callback' => 'add_hotel_location1',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['hotel/listing'] = array(
        'title' => 'List of Hotels',
        'page callback' => 'hotel_list',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );

    $items['hotel/ajax/getRoomPriceOfSelectedDates'] = array(
        'title' => 'List of Hotels',
        'page callback' => 'function_RoomPriceOfSelectedDates',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );


    return $items;
}

/*****************************************************************/
function hotels_theme(&$existing, $type, $theme, $path)
{
    $module_path = drupal_get_path('module', 'hotels');

    return array(
        'hotel_list' => array(
            'template' => 'hotel_list',
            'path' => $module_path . '/templates',
        ),
        'add_hotel' => array(
            'template' => 'add_hotel',
            'path' => $module_path . '/templates',
        ),

    );
}

/****************************************************************/


/**
 * function to get hotel aminties
 * get list from table gbl_hotel_amenities
 */
function getHotelAmenities()
{
    $query = db_select('gbl_hotel_amenities', 'gt')
        ->fields('gt')
        ->execute();
    while ($data = $query->fetchAssoc()) {
        $type[$data['hotel_amenities_id']] = trim($data['hotel_amenties_name']);
    }
    asort($type);
    return $type;
}

/**
 * get hotel amenties detail by id
 */
function getHotelAmenitiesById($id = 0)
{
    $query = db_select('gbl_hotel_amenities', 'gt')
        ->fields('gt')
        ->condition("hotel_amenities_id", $id)
        ->execute();
    $data = $query->fetchAssoc();
    return $data;
}

/**
 * function to get Room aminties
 * get list from table gbl_hotel_room_amenities
 */
function getHotelRoomAmenities()
{
    $query = db_select('gbl_hotel_room_amenities', 'gt')
        ->fields('gt')
        ->execute();
    while ($data = $query->fetchAssoc()) {
        $type[$data['hotel_amenities_id']] = trim($data['hotel_amenties_name']);
    }
    asort($type);
    return $type;
}

/**
 * get room amenties detail by id
 */
function getHotelRoomAmenitiesDetailsById($id = 0)
{
    $query = db_select('gbl_hotel_room_amenities', 'gt')
        ->fields('gt')
        ->condition("hotel_amenities_id", $id)
        ->execute();
    $data = $query->fetchAssoc();
    return $data;
}

/**
 * function to get Room aminties
 * get list from table gbl_hotel_safety_amenities
 */
function getHotelRoomSafetyAmenities()
{
    $query = db_select('gbl_hotel_safety_amenities', 'gt')
        ->fields('gt')
        ->execute();
    while ($data = $query->fetchAssoc()) {
        $type[$data['hotel_amenities_id']] = trim($data['hotel_amenties_name']);
    }

    asort($type);
    return $type;
}

/**
 * Function to get current DateTime
 */
function getCurrentDateTime()
{
    return date("Y-m-d h:i:s");
}

/**
 * Get Hotel Detail By hotel id
 * table detail : gbl_hotels
 */
function getHotelDetailById($hotel_id)
{
    $query = db_select('gbl_hotels', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_detail;
}

/**
 * Get Hotel Detail By hotel id
 * table detail : gbl_hotels
 */
function hotel_detail_view()
{
    $hotel_id = $_POST["hotel_id"];
    $query = db_select('gbl_hotels', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    $data_array = array();
    $data_array["twenty_four"] = $hotel_detail[0]["twentyfour_hour_offer"];
    $data_array["lastmin"] = $hotel_detail[0]["lastminute_offer"];
    $data_array["earlybird_offer"] = $hotel_detail[0]["earlybird_offer"];
    echo json_encode($data_array);
    die;
}

/**
 * get optional services from hotel id
 * table detail : gbl_hotel_optional_services
 */
function getOptionalServicesByHotelId($hotel_id)
{
    $query = db_select('gbl_hotel_optional_services', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_service_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_service_detail;
}

/***
 * Delete optional services
 *
 */
function delete_service_options()
{
    $service_id = $_POST["service_id"];
    $query = db_delete('gbl_hotel_optional_services')
        ->condition("hotel_service_id", $service_id)
        ->execute();
    echo "success";
    die;
}

/**
 * function to get room amenties & safety amenities
 */
function get_room_safety_amenities()
{

    $array_data = array();
    $array_data["room_amenities"] = getHotelRoomAmenities();
    $array_data["safety_amenities"] = getHotelRoomSafetyAmenities();
    echo json_encode($array_data);
    die;
}

/**
 * function to get rooms by hotel id
 * table gbl_hotel_rooms
 */
function get_room_detail_by_hotel_id()
{
    $hotel_id = $_POST["hotel_id"];
    $array_data = array();
    $query = db_select('gbl_hotel_rooms', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_room_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    if (count($hotel_room_detail) > 0) {
        foreach ($hotel_room_detail as $key => $val) {
            $array_data["data"][] = $val;
        }
        echo json_encode($array_data);
    } else {
        echo 'no_record';
    }
    die;
}

/**
 * get room details by hotel id
 * its used for php calls
 */
function getRoomDetailByHotelId($hotel_id)
{
    $array_data = array();
    $query = db_select('gbl_hotel_rooms', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_room_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_room_detail;
}

/**
 * get rules and policies of particular hotel
 * table gbl_hotel_rules_policies
 */
function getRulesPoliciesofHotel($hotel_id)
{
    $query = db_select('gbl_hotel_rules_policies', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_rules_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_rules_detail;
}


/**
 * save hotel and room pics
 *
 */
function savehotelroom_pics()
{
    $room_ids = $_POST["room_ids"];
    $hotel_id = $_POST["hotel_id"];
    $hotel_edit_img = $_POST['hotel_edit_imgs'];
    /**
     * For upload hotel images
     */

    if (isset($_FILES["hotel_pic"]["name"]) && !empty($_FILES["hotel_pic"]["name"])) {
        $hotel_img_array = array();

        foreach ($_FILES["hotel_pic"]["name"] as $key => $value) {
            if ($value != '') {
                /**
                 * for resize images
                 */
                $valid_formats = array("jpg", "png", "gif", "bmp", "jpeg", "PNG", "JPG", "JPEG", "GIF", "BMP");
                $imagename = $value;
                $size = $_FILES['hotel_pic']['size'][$key];
                $actual_image_name = time();
                if (strlen($imagename)) {
                    $ext = strtolower(getExtension($imagename));
                    if (in_array($ext, $valid_formats)) {
                        $actual_image_name = time() . substr(str_replace(" ", "_", $txt), 5) . "." . $ext;
                        $hotel_img_array[] = $actual_image_name;
                        $uploadedfile = $_FILES['hotel_pic']['tmp_name'][$key];

                        $widthArray = array(1920, 600);
                        foreach ($widthArray as $newwidth) {
                            $path = $_SERVER["DOCUMENT_ROOT"] . '/' . drupal_get_path('theme', $GLOBALS['theme']) . '/hotel_img';
                            if ($newwidth == 1920) {
                                $path .= '/main/';
                            } else {
                                $path .= '/listing_page/';
                            }
                            $filename = compressImageHotelPic($ext, $uploadedfile, $path, $actual_image_name, $newwidth);
                        }

                    }
                }
                /**
                 * for resize images
                 */
            }

        }
        /**
         * entery in database
         * table gbl_hotels
         */
        $data_array = array(
            "hotel_images" => json_encode($hotel_img_array),
            "modified" => getCurrentDateTime(),
        );
        $query = db_update('gbl_hotels')
            ->fields($data_array)
            ->condition("hotel_id", $hotel_id);
        $result = $query->execute();
    }
    /**
     * hotel edit images
     */
    if (isset($hotel_edit_img) && !empty($hotel_edit_img)) {
        $data = explode(',', $hotel_edit_img);

        $array_hotel_img = array();
        if (isset($_FILES["hotel_pic"]["name"]) && !empty($_FILES["hotel_pic"]["name"])) {
            $query = db_select('gbl_hotels', 'gt')
                ->fields('gt')
                ->condition("hotel_id", $hotel_id)
                ->execute();
            $hotel_rules_detail = $query->fetchAll(PDO::FETCH_ASSOC);
            $array_hotel_img = json_decode($hotel_rules_detail[0]["hotel_images"]);
        }
        $array_hotel_img1 = array_merge(array_filter($data), $array_hotel_img);
        $array_hotel_img = array();
        $counter_hotel_img = 0;
        foreach ($array_hotel_img1 as $key => $value) {
            if ($counter_hotel_img < 10) {
                $array_hotel_img[] = $value;
            }
            $counter_hotel_img++;
        }
        /**
         * entery in database
         * table gbl_hotels
         */
        $data_array = array(
            "hotel_images" => json_encode($array_hotel_img),
            "modified" => getCurrentDateTime(),
        );

        $query = db_update('gbl_hotels')
            ->fields($data_array)
            ->condition("hotel_id", $hotel_id);
        $result = $query->execute();


    }


    /**
     * for upload rooms images
     */
    $room_id_array = explode(",", $room_ids);
    if (count($room_id_array) > 0) {
        foreach ($room_id_array as $key => $value) {
            $room_img_array = array();
            if (isset($_FILES["roompic_" . $value]["name"]) && !empty($_FILES["roompic_" . $value]["name"])) {

                foreach ($_FILES["roompic_" . $value]["name"] as $key1 => $val1) {

                    /**
                     * for resize images
                     */
                    $valid_formats = array("jpg", "png", "gif", "bmp", "jpeg", "PNG", "JPG", "JPEG", "GIF", "BMP");
                    $imagename = $val1;
                    $size = $_FILES["roompic_" . $value]["size"][$key1];
                    $actual_image_name = time() . "_" . $val1;
                    if (strlen($imagename)) {
                        $ext = strtolower(getExtension($imagename));
                        if (in_array($ext, $valid_formats)) {
                            $actual_image_name = time() . substr(str_replace(" ", "_", $txt), 5) . "." . $ext;
                            $room_img_array[] = $actual_image_name;
                            $uploadedfile = $_FILES["roompic_" . $value]["tmp_name"][$key1];
                            $widthArray = array(800, 600);
                            foreach ($widthArray as $newwidth) {
                                $path = $_SERVER["DOCUMENT_ROOT"] . '/' . drupal_get_path('theme', $GLOBALS['theme']) . '/rooms_img';
                                if ($newwidth == 800) {
                                    $path .= '/main/';
                                } else {
                                    $path .= '/listing_page/';
                                }
                                //echo $path;
                                $filename = compressImageRoomPic($ext, $uploadedfile, $path, $actual_image_name, $newwidth);
                            }

                        }
                    }
                    /**
                     * for resize images
                     */

                }
                /**
                 * entery in database
                 * table room_images
                 */
                $data_array = array(
                    "room_images" => json_encode($room_img_array),
                    "modified" => getCurrentDateTime(),
                );
                $query = db_update('gbl_hotel_rooms')
                    ->fields($data_array)
                    ->condition("room_id", $value);
                $result = $query->execute();
            }
        }
    }

    /**
     * for room edit
     */
    $room_id_array = explode(",", $room_ids);
    foreach ($room_id_array as $key => $value) {
        if (isset($_POST['edit_room_img_' . $value]) && !empty($_POST['edit_room_img_' . $value])) {
            $room_image_data = $_POST["edit_room_img_" . $value];
            $data = explode(',', $room_image_data);

            $array_room_img = array();
            if (isset($_FILES["roompic_" . $value]["name"]) && !empty($_FILES["roompic_" . $value]["name"])) {
                $query = db_select('gbl_hotel_rooms', 'gt')
                    ->fields('gt')
                    ->condition("room_id", $value)
                    ->execute();
                $room_rules_detail = $query->fetchAll(PDO::FETCH_ASSOC);
                $array_room_img = json_decode($room_rules_detail[0]["room_images"]);
            }
            $array_room_img1 = array_merge(array_filter($data), $array_room_img);
            $array_room_img = array();
            $room_img_counter = 0;
            foreach ($array_room_img1 as $key => $val) {
                if ($room_img_counter < 10) {
                    $array_room_img[] = $val;
                }
                $room_img_counter++;
            }
            /**
             * entery in database
             * table gbl_hotels
             */
            $data_array = array(
                "room_images" => json_encode($array_room_img),
                "modified" => getCurrentDateTime(),
            );
            $query = db_update('gbl_hotel_rooms')
                ->fields($data_array)
                ->condition("room_id", $value);
            $result = $query->execute();
        }
    }

    echo "success";
    die;
}

/**
 * get hotel recent pics
 */
function get_hotel_recent_pic()
{
    $hotel_id = $_POST["hotel_id"];
    $hotel_data = getHotelDetailById($hotel_id);
    $hotel_pics_data = array();
    if (count($hotel_data) > 0) {
        $hotel_pics_data = $hotel_data[0]["hotel_images"];
    }
    echo $hotel_pics_data;
    die;

}

/**
 * get Rooms pic based on hotel
 */

function get_rooms_recent_pic()
{
    $hotel_id = $_POST["hotel_id"];
    $room_data = getRoomDetailByHotelId($hotel_id);
    $room_data_array = array();
    foreach ($room_data as $key => $value) {
        $room_data_array[] = $value;
    }
    echo json_encode($room_data_array);
    die;

}

/**
 * get hotel board type
 * gbl_hotel_boardtype
 */
function get_hotel_boardtype()
{
    $hotel_id = $_POST["hotel_id"];
    $query = db_select('gbl_hotel_boardtype', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_boardtype_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    echo json_encode($hotel_boardtype_detail);
    die;
}

/*
 * get hotel seasonnal price
 * gbl_hotel_seasonnal_price,gbl_hotel_rooms
 */
function get_hotel_seasonnal_price()
{
    $hotel_id = $_POST["hotel_id"];
    $query1 = "SELECT sp.*,ghr.room_name FROM `gbl_hotel_seasonnal_price` as sp 
left join gbl_hotel_rooms as ghr on(ghr.room_id=sp.room_id) WHERE sp.hotel_id=$hotel_id";
    $query = db_query($query1);
    $result = array();
    $result_length = array();
    while ($row = $query->fetchAssoc()) {
        $result["data"][] = $row;
        $result_length[] = $row["room_id"];
    }
    $result["length"] = count(array_unique($result_length));
    echo json_encode($result);
    die;
}

/**
 * function to add location of hotel
 */
function add_hotel_location()
{

    $hotel_id = $_POST["hotel_id"];
    $address = $_POST["addressline1"] . ' ' . $_POST["city"] . ' ' . $_POST["state"] . ' ' . $_POST["country_popup"];
    $lat_log_data = timezone_convert_helper_getLatiLongByAddress($address);
    $data_array = array(
        "hotel_address" => $_POST["addressline1"],
        "hotel_address1" => $_POST["addressline2"],
        "hotel_city" => $_POST["city"],
        "hotel_state" => $_POST["state"],
        "hotel_zipcode" => $_POST["zipcode"],
        "hotel_country" => $_POST["country_popup"],
        "hotel_latitude" => $lat_log_data["lati"],
        "hotel_longitude" => $lat_log_data["long"],
        "modified" => getCurrentDateTime(),
    );
    $query = db_update('gbl_hotels')
        ->fields($data_array)
        ->condition("hotel_id", $hotel_id);
    $result = $query->execute();
    drupal_set_message("Location Details successfully Saved !!!");

    echo "success";
    die;
}

/**
 * function to add location1 of hotel
 */
function add_hotel_location1()
{
    $hotel_id = $_POST["hotel_id"];
    $data_array = array(
        "hotel_instruction" => $_POST["hotel_instruction"],
        "modified" => getCurrentDateTime(),
    );
    $query = db_update('gbl_hotels')
        ->fields($data_array)
        ->condition("hotel_id", $hotel_id);
    $result = $query->execute();
    echo "success";
    die;
}

/**
 * function to get hotel details
 */
function gethotel_detail($hotel_id)
{
    $query = db_select('gbl_hotels', 'gt')
        ->fields('gt')
        ->condition("hotel_id", $hotel_id)
        ->execute();
    $hotel_boardtype_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_boardtype_detail;
}

/**
 * function to get hotel details
 */
function getHotelListByUser($user_id)
{
    $query = db_select('gbl_hotels', 'gt')
        ->fields('gt')
        ->condition("user_id", $user_id)
        ->execute();
    $hotel_list = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_list;
}

/**
 * function to list hotel
 */

function hotel_list()
{
    $hotel_data = getHotelByUserId();
    return theme('hotel_list', array('hotel_data' => $hotel_data));
}

/**
 * get hotel by user id
 */
function getHotelByUserId()
{
    global $user;
    $user_id = $user->uid;
    $query = db_select('gbl_hotels', 'gt')
        ->fields('gt')
        ->condition("user_id", $user_id)
        ->execute();
    $hotel_data = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_data;
    die;

}

/**
 * get latitude  logitude of location
 *
 */
function timezone_convert_helper_getLatiLongByAddress($address)
{
    $address = str_replace(" ", "+", $address);
    $url = "http://maps.google.com/maps/api/geocode/json?address=$address&sensor=false";
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_PROXYPORT, 3128);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    $response = curl_exec($ch);
    curl_close($ch);
    $response_a = json_decode($response);
    $lat = $response_a->results[0]->geometry->location->lat;
    if (empty($lat)) {
        $lat = '';
    }
    $long = $response_a->results[0]->geometry->location->lng;
    if (empty($long)) {
        $long = '';//default latitude & logitude
    }
    /**
     * if latitude or longitude not available then
     * return default location's latitude and logitude
     */
    $data_array = array(
        "lati" => $lat,
        "long" => $long,
    );
    return $data_array;
}

/**
 * get hotel detail by location
 */
function getHotelsDataByLocaiton($seach_destination)
{

    $query = db_select('gbl_hotels', 'gh');
    $query->fields('gh', array(
        'hotel_city', "hotel_name", "hotel_state", "hotel_country", "hotel_latitude", "hotel_longitude", 'hotel_images',
        'hotel_id'
    ));
    $query->leftJoin('gbl_hotel_rooms', 'ghr', 'gh.hotel_id = ghr.hotel_id');

    /* if($dateFrom) {
         $query->condition('sh.startDate', $dateFrom, '<=');
     }
     if($dateTo) {
         $query->condition('sh.endRepeatDate', $dateTo, '>=');
     }
     if($persons) {
         $query->condition('sh.avalability_max', $persons, '>=');
     }
    */

    $query->condition(db_or()
        ->condition('gh.hotel_city', '%' . db_like($seach_destination) . '%', 'like')
        ->condition('gh.hotel_state', '%' . db_like($seach_destination) . '%', 'like')
        ->condition('gh.hotel_country', '%' . db_like($seach_destination) . '%', 'like')
        ->condition('gh.hotel_address', '%' . db_like($seach_destination) . '%', 'like')
    )
        ->condition('ghr.room_night_rate', 0, '>')
        ->groupBy('gh.hotel_id');

    return $query;
}

/**
 * get available room and there price based on search dates
 */
function CheckHotelRoomAvailable($seach_destination, $check_in, $check_out, $hotel_type = null, $price_range, $hotel_id = null, $no_of_rooms = 0)
{
    $query = "select * from gbl_hotels ";
    $query .= " where (hotel_name like '%" . $seach_destination . "%' or hotel_city like '%" . $seach_destination . "%' or hotel_state like '%" . $seach_destination . "%' or hotel_country like '%" . $seach_destination . "%' or hotel_address like '%" . $seach_destination . "%')";
    $query .= " GROUP BY hotel_id  ";
    $query = db_query($query);
    $hotel_room_data = $query->fetchAll(PDO::FETCH_ASSOC);

    foreach ($hotel_room_data as $key => $value) {
        $query = " select * from gbl_hotel_rooms where hotel_id =" . $value['hotel_id'];
        $query = db_query($query);
        $room_result_data = $query->fetchAll(PDO::FETCH_ASSOC);

        if (!empty($room_result_data)) {
            $hotel_room_data[$key]["room_detail"] = $room_result_data;
        }

    }

    /**
     * for available room
     */
    $hotel_result_data = array();
    foreach ($hotel_room_data as $key => $value) {
        foreach ($value["room_detail"] as $key1 => $value1) {
            $query = "select *,SUM(no_of_rooms) AS total_booked_rooms from gbl_room_booking_details where hotel_id=" .
                $value["hotel_id"] . " and  room_id =" .
                $value1["room_id"];
            $query .= " and  start_date <='$check_in' and end_date > '$check_out'";
            $query = db_query($query);
            $booking_data = $query->fetchAll(PDO::FETCH_ASSOC);
            if (!empty($booking_data)) {
                if ($value1["room_quantity"] > $booking_data[0]["total_booked_rooms"]) {
                    $hotel_result_data[] = $value;
                }
            }
        }
    }

    $price_range_condition = '';
    if (isset($price_range) && $price_range != '') {
        $price = explode(",", $price_range);
        $price_range_condition = ' and (room_night_rate <=' . $price[1] . ' and room_night_rate >=' . $price[0] . ')';
    }

    $result_array = array();
    foreach ($hotel_result_data as $key => $value) {
        $query = " select * from gbl_hotel_rooms where hotel_id =" . $value['hotel_id'] . " $price_range_condition  order by room_night_rate desc limit 1";
        $query = db_query($query);
        $room_data = $query->fetchAll(PDO::FETCH_ASSOC);
        if (count($room_data) > 0) {
            $hotel_result_data[$key]["lowest_price"] = $room_data[0]["room_night_rate"];
            $result_array[] = $hotel_result_data[$key];
        }
    }
    $hotel_result_data = array_map("unserialize", array_unique(array_map("serialize", $result_array)));
    return $hotel_result_data;

}

/**
 * function for calculate price between
 */
function function_RoomPriceOfSelectedDates()
{
    $room_id = $_POST["room_id"];
    $no_of_room = $_POST["no_of_room"];
    $check_out = date("Y-m-d", strtotime($_POST["check_out"]));
    $check_in = date("Y-m-d", strtotime($_POST["check_in"]));
    $check_out1 = $check_out;
    $check_in1 = $check_in;
    $hotel_id = $_POST["hotel_id"];
    $board_type = $_POST["board_type"];
//            $_SESSION["hotel_room"]='';
    $price = 0;
    while (strtotime($check_in) < strtotime($check_out)) {
        $seasonal_offer = 0;
        $query = "SELECT nightly_rate FROM `gbl_hotel_seasonnal_price` WHERE hotel_id=$hotel_id AND room_id= $room_id AND start_date <= '$check_in' AND end_date >='$check_in'";
        $query = db_query($query);
        $seasonal_price = $query->fetchAll(PDO::FETCH_ASSOC);
        if (isset($seasonal_price[0]["nightly_rate"]) && !empty($seasonal_price[0]["nightly_rate"])) {
            $price = $price + $seasonal_price[0]["nightly_rate"];
            $seasonal_offer = 1;
        } else {
            $query = "SELECT room_night_rate FROM `gbl_hotel_rooms` WHERE room_id=" . $room_id;
            $query = db_query($query);
            $basic_price = $query->fetchAll(PDO::FETCH_ASSOC);
            $price = $price + $basic_price[0]["room_night_rate"];

        }
        $check_in = date("Y-m-d", strtotime("+1 day", strtotime($check_in)));
    }
    $price = $no_of_room * $price;
    $data_array = array(
        "room_id" => $room_id,
        "hotel_id" => $hotel_id,
        "check_in" => $check_in1,
        "check_out" => $check_out1,
        "seasonal_offer" => $seasonal_offer,
        "24_hour_offer" => 0,
        "last_min_offer" => 0,
        "early_bird_offer" => 0,
        "no_of_room" => $no_of_room,
        "price" => $price,
        "board_type" => $board_type,
    );
    if (!isset($_SESSSION)) {
        session_start();
    }

    $_SESSION["hotel_room_cart"][$room_id] = $data_array;
    $total_amount = 0;
    foreach ($_SESSION["hotel_room_cart"] as $key => $value) {
        $total_amount = $total_amount + $value["price"];
    }
    echo "success|" . $total_amount;
    die;
}

/**
 * get room detail by room id
 */
function getRoomDetailByRoomId($room_id)
{

    $array_data = array();
    $query = db_select('gbl_hotel_rooms', 'gt')
        ->fields('gt')
        ->condition("room_id", $room_id)
        ->execute();
    $hotel_room_detail = $query->fetchAll(PDO::FETCH_ASSOC);
    return $hotel_room_detail;
}

function hotels_manage()
{
    return theme('hotels_manage');
}



/**
 *
 *to get extension of images
 */
function getExtension($str)
{
    $i = strrpos($str, ".");
    if (!$i) {
        return "";
    }
    $l = strlen($str) - $i;
    $ext = substr($str, $i + 1, $l);
    return $ext;
}

/**
 *
 * to compres hotel images
 */
function compressImageHotelPic($ext, $uploadedfile, $path, $actual_image_name, $newwidth)
{
    header('Content-Type: image/jpeg');
    if ($ext == "jpg" || $ext == "jpeg") {
        $src = imagecreatefromjpeg($uploadedfile);
    } else if ($ext == "png") {
        $src = imagecreatefrompng($uploadedfile);
    } else if ($ext == "gif") {
        $src = imagecreatefromgif($uploadedfile);
    } else {
        $src = imagecreatefrombmp($uploadedfile);
    }

    list($width, $height) = getimagesize($uploadedfile);
    if ($newwidth == 1920) {
        $newheight = 602;
    } else {
        $newheight = 504;//($height/$width)*$newwidth;
    }
    $tmp = imagecreatetruecolor($newwidth, $newheight);
    imagecopyresampled($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
    $filename = $path . $actual_image_name;
    imagejpeg($tmp, $filename, 100);
    imagedestroy($tmp);
    return $filename;
}

/**
 *
 * to compres room images
 */
function compressImageRoomPic($ext, $uploadedfile, $path, $actual_image_name, $newwidth)
{
    header('Content-Type: image/jpeg');
    if ($ext == "jpg" || $ext == "jpeg") {
        $src = imagecreatefromjpeg($uploadedfile);
    } else if ($ext == "png") {
        $src = imagecreatefrompng($uploadedfile);
    } else if ($ext == "gif") {
        $src = imagecreatefromgif($uploadedfile);
    } else {
        $src = imagecreatefrombmp($uploadedfile);
    }

    list($width, $height) = getimagesize($uploadedfile);
    if ($newwidth == 800) {
        $newheight = 484;
    } else {
        $newheight = 504;//($height/$width)*$newwidth;
    }
    $tmp = imagecreatetruecolor($newwidth, $newheight);
    imagecopyresampled($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
    $filename = $path . $actual_image_name;
    imagejpeg($tmp, $filename, 100);
    imagedestroy($tmp);
    return $filename;
}